var searchIndex = JSON.parse('{\
"cjdns_admin":{"doc":"CJDNS Admin lib","i":[[3,"Opts","cjdns_admin","Connection options. Can be loaded from a config file.",null,null],[12,"addr","","Remote IP address (either IPv4 or IPv6).",0,null],[12,"port","","Remote UDP port.",0,null],[12,"password","","Password for authentication. If `None`, default \\\"NONE\\\"…",0,null],[12,"config_file_path","","Optional path to config file (`~/.cjdnsadmin` used by…",0,null],[12,"anon","","Anonymous connection - do not use password.",0,null],[3,"Connection","","Admin connection to the CJDNS node.",null,null],[12,"functions","","List of available remote functions.",1,null],[3,"ArgValues","","Remote function argument values.",null,null],[3,"Arg","","Remote function argument description.",null,null],[12,"name","","Argument name.",2,null],[12,"required","","Required argument flag.",2,null],[12,"typ","","Argument type.",2,null],[3,"Args","","Remote function arguments description.",null,null],[3,"Func","","Remote function description.",null,null],[12,"name","","Function name.",3,null],[12,"args","","Function argument descriptions.",3,null],[3,"Funcs","","List of available remote functions.",null,null],[4,"Error","","Error type for all cjdns admin operations.",null,null],[13,"ConnectError","","Connection error - check the remote IP address and port.",4,null],[13,"AuthError","","Authentication error - check the password.",4,null],[13,"ConfigFileRead","","Failed to read cjdnsadmin config file (`~/.cjdnsadmin` by…",4,null],[13,"BadConfigFile","","Error parsing cjdnsadmin config file (`~/.cjdnsadmin` by…",4,null],[13,"BadNetworkAddress","","Failed to parse IPv4/IPv6 address.",4,null],[13,"NetworkOperation","","Network I/O error.",4,null],[13,"Protocol","","Failed to serialize/deserialize protocol message (using…",4,null],[13,"RemoteError","","Remote invocation failed and returned `error` message.",4,null],[13,"BrokenTx","","Unexpected transaction id during message exchange.…",4,null],[12,"sent_txid","cjdns_admin::Error","",5,null],[12,"received_txid","","",5,null],[13,"TimeOut","cjdns_admin","Network timeout error.",4,null],[4,"ArgValue","","Argument value (either integer or string).",null,null],[13,"Int","","Integer argument value.",6,null],[13,"String","","String argument value.",6,null],[4,"ArgType","","Remote function argument type.",null,null],[13,"Int","","Integer argument.",7,null],[13,"String","","String argument.",7,null],[13,"Other","","Some other type which is not supported directly.",7,null],[4,"ReturnValue","","Remote function return value. Supports json-like data types.",null,null],[13,"Int","","Integer return value.",8,null],[13,"String","","String return value.",8,null],[13,"List","","List return value.",8,null],[13,"Map","","Map return value.",8,null],[5,"connect","","Connect to the running cjdns router instance. If `opts` is…",null,[[["option",4],["opts",3]]]],[11,"invoke","","Call remote function on CJDNS router.",1,[[["args",8]]]],[11,"new","","New empty instance.",9,[[]]],[11,"add","","Add argument value to list.",9,[[["into",8],["into",8],["argname",6],["argvalue",4]]]],[11,"iter","","Iterator over functions in this list returned in…",10,[[]]],[11,"find","","Find function by name.",10,[[],[["func",3],["option",4]]]],[11,"iter","","Iterator over arguments in this list. Returns required…",11,[[]]],[11,"as_int","","Access stored Int value.",8,[[],["result",4]]],[11,"as_str","","Access stored String value.",8,[[],["result",4]]],[11,"as_list","","Access stored List value, converting each list element.…",8,[[],[["result",4],["vec",3]]]],[11,"as_map","","Access stored Map value, converting each entry value…",8,[[],[["result",4],["btreemap",3]]]],[11,"as_int_list","","Access stored List value. Returns a new `Vec` where each…",8,[[],[["result",4],["vec",3]]]],[11,"as_int_map","","Access stored Map<String, Int> value. Returns a new…",8,[[],[["result",4],["btreemap",3]]]],[0,"msgs","","RPC messages.",null,null],[3,"Empty","cjdns_admin::msgs","Empty payload or arguments.",null,null],[6,"GenericResponsePayload","","Generic return value with fields exposed as a map.",null,null],[8,"Args","","Trait for RPC query arguments. Can be any serializable type.",null,null],[8,"Payload","","Trait for RPC query return value. Can be any…",null,null],[6,"ArgName","cjdns_admin","Argument name (alias to `String`).",null,null],[14,"cjdns_invoke","","Helper macro to easily invoke remote function with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","cjdns_admin::msgs","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","cjdns_admin","",6,[[]]],[11,"from","","",6,[[["string",3]]]],[11,"from","","",6,[[]]],[11,"from","","",7,[[["string",3]]]],[11,"clone","","",0,[[],["opts",3]]],[11,"clone","","",1,[[],["connection",3]]],[11,"clone","","",6,[[],["argvalue",4]]],[11,"clone","","",9,[[],["argvalues",3]]],[11,"clone","","",10,[[],["funcs",3]]],[11,"clone","","",3,[[],["func",3]]],[11,"clone","","",11,[[],["args",3]]],[11,"clone","","",2,[[],["arg",3]]],[11,"clone","","",7,[[],["argtype",4]]],[11,"clone","","",8,[[],["returnvalue",4]]],[11,"clone","cjdns_admin::msgs","",12,[[],["empty",3]]],[11,"default","cjdns_admin","",0,[[],["opts",3]]],[11,"default","","",9,[[],["argvalues",3]]],[11,"default","","",10,[[],["funcs",3]]],[11,"default","cjdns_admin::msgs","",12,[[],["empty",3]]],[11,"eq","cjdns_admin","",0,[[["opts",3]]]],[11,"ne","","",0,[[["opts",3]]]],[11,"eq","","",6,[[["argvalue",4]]]],[11,"ne","","",6,[[["argvalue",4]]]],[11,"eq","","",9,[[["argvalues",3]]]],[11,"ne","","",9,[[["argvalues",3]]]],[11,"eq","","",10,[[["funcs",3]]]],[11,"ne","","",10,[[["funcs",3]]]],[11,"eq","","",3,[[["func",3]]]],[11,"ne","","",3,[[["func",3]]]],[11,"eq","","",11,[[["args",3]]]],[11,"ne","","",11,[[["args",3]]]],[11,"eq","","",2,[[["arg",3]]]],[11,"ne","","",2,[[["arg",3]]]],[11,"eq","","",7,[[["argtype",4]]]],[11,"ne","","",7,[[["argtype",4]]]],[11,"eq","","",8,[[["returnvalue",4]]]],[11,"ne","","",8,[[["returnvalue",4]]]],[11,"eq","cjdns_admin::msgs","",12,[[["empty",3]]]],[11,"fmt","cjdns_admin","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_admin::msgs","",12,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_admin","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"serialize","","",9,[[["serializer",8]],["result",4]]],[11,"serialize","cjdns_admin::msgs","",12,[[],["result",4]]],[11,"deserialize","cjdns_admin","",0,[[],["result",4]]],[11,"deserialize","","",8,[[["deserializer",8]],["result",4]]],[11,"deserialize","cjdns_admin::msgs","",12,[[],["result",4]]]],"p":[[3,"Opts"],[3,"Connection"],[3,"Arg"],[3,"Func"],[4,"Error"],[13,"BrokenTx"],[4,"ArgValue"],[4,"ArgType"],[4,"ReturnValue"],[3,"ArgValues"],[3,"Funcs"],[3,"Args"],[3,"Empty"]]},\
"cjdns_ann":{"doc":"Library for parsing cjdns route announcement messages.","i":[[3,"AnnHash","cjdns_ann","512-bit hash",null,null],[12,"0","","",0,null],[3,"Announcement","","Deserialized cjdns route announcement message.",null,null],[12,"header","","",1,null],[12,"entities","","",1,null],[12,"node_pub_key","","",1,null],[12,"node_ip","","",1,null],[12,"binary","","",1,null],[12,"hash","","",1,null],[3,"AnnouncementHeader","","Deserialized announcement message header.",null,null],[12,"signature","","",2,null],[12,"pub_signing_key","","",2,null],[12,"snode_ip","","",2,null],[12,"version","","",2,null],[12,"is_reset","","",2,null],[12,"timestamp","","",2,null],[3,"LinkStateData","","",null,null],[12,"node_id","","",3,null],[12,"starting_point","","",3,null],[12,"lag_slots","","",3,null],[12,"drop_slots","","",3,null],[12,"kb_recv_slots","","",3,null],[3,"PeerData","","",null,null],[12,"ipv6","","",4,null],[12,"label","","",4,null],[12,"mtu","","",4,null],[12,"peer_num","","",4,null],[12,"unused","","",4,null],[12,"encoding_form_number","","",4,null],[12,"flags","","",4,null],[3,"AnnouncementPacket","","Serialized announcement message. A thin wrapper over…",null,null],[4,"Entity","","Announcement message entity types.",null,null],[13,"NodeProtocolVersion","","The packet diagram for version entity looks as follows:",5,null],[13,"Peer","","The packet diagram for peer entity looks as follows:",5,null],[13,"EncodingScheme","","As `EncodingScheme` serialization does not have a fixed…",5,null],[12,"hex","cjdns_ann::Entity","",6,null],[12,"scheme","","",6,null],[13,"LinkState","cjdns_ann","`LinkState` stores data, which is used by route…",5,null],[11,"from_digest","","",0,[[["digest",3]]]],[11,"into_inner","","",0,[[],["vec",3]]],[11,"bytes","","",0,[[]]],[11,"try_new","","Wrap raw announcement message bytes.",7,[[["vec",3]],[["result",4],["packeterror",4]]]],[11,"check","","Checks announcement message digital signature validity.…",7,[[],[["result",4],["packeterror",4]]]],[11,"parse","","Parses announcement packet and creates deserialized…",7,[[],[["result",4],["announcement",3],["packeterror",4]]]],[11,"into_inner","","",7,[[],["vec",3]]],[6,"AnnouncementEntities","","A sequence of entities in the announcement message.",null,null],[6,"LinkStateSlots","","An array of slots storing network link samples.",null,null],[17,"LINK_STATE_SLOTS","","Samples are collected every 10 seconds, normally messages…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",1,[[],["announcement",3]]],[11,"clone","","",2,[[],["announcementheader",3]]],[11,"clone","","",5,[[],["entity",4]]],[11,"clone","","",4,[[],["peerdata",3]]],[11,"clone","","",3,[[],["linkstatedata",3]]],[11,"clone","","",0,[[],["annhash",3]]],[11,"clone","","",7,[[],["announcementpacket",3]]],[11,"eq","","",1,[[["announcement",3]]]],[11,"ne","","",1,[[["announcement",3]]]],[11,"eq","","",2,[[["announcementheader",3]]]],[11,"ne","","",2,[[["announcementheader",3]]]],[11,"eq","","",5,[[["entity",4]]]],[11,"ne","","",5,[[["entity",4]]]],[11,"eq","","",4,[[["peerdata",3]]]],[11,"ne","","",4,[[["peerdata",3]]]],[11,"eq","","",3,[[["linkstatedata",3]]]],[11,"ne","","",3,[[["linkstatedata",3]]]],[11,"eq","","",0,[[["annhash",3]]]],[11,"ne","","",0,[[["annhash",3]]]],[11,"eq","","",7,[[["announcementpacket",3]]]],[11,"ne","","",7,[[["announcementpacket",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[3,"AnnHash"],[3,"Announcement"],[3,"AnnouncementHeader"],[3,"LinkStateData"],[3,"PeerData"],[4,"Entity"],[13,"EncodingScheme"],[3,"AnnouncementPacket"]]},\
"cjdns_bencode":{"doc":"CJDNS Bencode library.","i":[[5,"from_bytes","cjdns_bencode","Deserialize an instance of `T` from bencode",null,[[],[["result",4],["error",4]]]],[5,"to_bytes","","Serialize an instance of `T` to bencode",null,[[],[["error",4],["result",4],["vec",3]]]],[4,"Error","","An enumeration of potential errors that appear during…",null,null],[13,"ArbitraryMapKeysUnsupported","","Error that occurs if a map with a key type which does not…",0,null],[13,"MapSerializationCallOrder","","Error that occurs if methods on MapSerializer are called…",0,null],[13,"InvalidBool","","Error that occurs if a bool is deserialized from an…",0,null],[13,"InvalidF32","","Error that occurs if an f32 is deserialized from an string…",0,null],[13,"InvalidF64","","Error that occurs if an f64 is deserialized from an string…",0,null],[13,"InvalidChar","","Error that occurs if a char is deserialized from a string…",0,null],[13,"TrailingBytes","","Error that occurs if trailing bytes remain after…",0,null],[13,"CustomEncode","","Error that occurs if a serde-related error occurs during…",0,null],[13,"CustomDecode","","Error that occurs if a serde-related error occurs during…",0,null],[13,"Encode","","Error that occurs if a problem is encountered during…",0,null],[13,"Decode","","Error that occurs if a problem is encountered during…",0,null],[3,"BencodeError","","",null,null],[12,"0","","",1,null],[3,"BValue","","Generic Bencode value.",null,null],[11,"builder","","Create new `BValue` using builder.",2,[[],["bvaluebuilder",3]]],[11,"decode","","Create `BValue` from bencoded data bytes.",2,[[],[["result",4],["bdecodeerror",3]]]],[11,"encode","","Encode this `BValue` as bencoded data bytes.",2,[[],[["result",4],["bencodeerror",3],["vec",3]]]],[11,"as_int","","Access stored Integer value.",2,[[],["result",4]]],[11,"as_string","","Access stored bytes value as UTF-8 string.",2,[[],[["result",4],["string",3]]]],[11,"as_bytes","","Access stored bytes value.",2,[[],[["vec",3],["result",4]]]],[11,"has_dict_entry","","Check whether stored Dict has specified key.",2,[[]]],[11,"get_dict_value","","Access stored Dict value by key and return the data under…",2,[[],[["result",4],["option",4]]]],[11,"get_dict_value_str","","Access stored Dict value by key and return the string data…",2,[[],[["result",4],["string",3]]]],[11,"get_dict_value_bytes","","Access stored Dict value by key and return the bytes data…",2,[[],[["vec",3],["result",4]]]],[11,"delete_dict_value","","",2,[[],["result",4]]],[11,"set_dict_value","","",2,[[["bvalue",3]],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"as_fail","","",1,[[],["fail",8]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"custom","","",0,[[],["error",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["error",3]]],[11,"from","","",1,[[["structureerror",4]],["error",3]]],[11,"from","","",1,[[["errorkind",4]],["error",3]]],[11,"from","","",0,[[["parseinterror",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["utf8error",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"name","","",1,[[],["option",4]]],[11,"cause","","",1,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",1,[[],[["backtrace",3],["option",4]]]],[11,"custom","","",0,[[],["error",4]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",2,[[],["bvalue",3]]],[11,"eq","","",2,[[["bvalue",3]]]],[11,"ne","","",2,[[["bvalue",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"malformed_content","","Raised when there is a general error while deserializing a…",1,[[],["error",3]]]],"p":[[4,"Error"],[3,"BencodeError"],[3,"BValue"]]},\
"cjdns_bytes":{"doc":"Utilities for parsing and serializing of messages","i":[[3,"Reader","cjdns_bytes","Buffer reader",null,null],[3,"Writer","","Buffer writer. Wrapper over `Vec<u8`.",null,null],[4,"ParseError","","Errors returned when parsing message or its parts (for…",null,null],[13,"InvalidPacketSize","","Data with wrong size received to parser",0,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",0,null],[13,"InvalidData","","Received unusable data. Description message can be provided.",0,null],[13,"InvalidChecksum","","Checksum match failed. Matching checksum values can be…",0,null],[4,"SerializeError","","Errors returned when serializing message or its parts (for…",null,null],[13,"UnrecognizedData","","Trying to serialize data with values unintended to be…",1,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",1,null],[13,"InvalidData","","Trying to serialize unusable data. Description message can…",1,null],[4,"ExpectedSize","","Expected by user size of buffer.",null,null],[13,"Exact","","`Reader` must have exact size, equal to associated value",2,null],[13,"NotLessThan","","`Reader` length must be not less than associated value",2,null],[11,"new","","Instantiates `Reader`.",3,[[]]],[11,"read","","Reads bytes in accordance to logic implemented in `job`.",3,[[["expectedsize",4],["fnonce",8]],[["result",4],["readerror",3]]]],[11,"read_u8","","Reads u8",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_u16_be","","Reads big endian u16",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_u32_be","","Reads big endian u32",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_u64_be","","Reads big endian u64",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_array_32","","Reads `[u8; 32]` array.",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"peek_remainder","","Peeks remainder without mutating readers state",3,[[]]],[11,"read_remainder","","Returns remainder mutating readers state.",3,[[]]],[11,"skip","","Skips `count` amount of data.",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_slice","","Reads `count` values.",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"is_empty","","",3,[[]]],[11,"new","","Instantiates new writer.",4,[[]]],[11,"with_capacity","","Instantiates writer with provided `capacity`.",4,[[]]],[11,"into_vec","","Converts `Writer` into `Vec<u8>`.",4,[[],["vec",3]]],[11,"write_u8","","Writes u8 to buffer.",4,[[]]],[11,"write_u16_be","","Writes big endian u16 to buffer.",4,[[]]],[11,"write_u32_be","","Writes big endian u32 to buffer.",4,[[]]],[11,"write_u64_be","","Writes big endian 64 to buffer.",4,[[]]],[11,"write_slice","","Writes slice to buffer.",4,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"clone","","",1,[[],["serializeerror",4]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"eq","","",1,[[["serializeerror",4]]]],[11,"ne","","",1,[[["serializeerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"ParseError"],[4,"SerializeError"],[4,"ExpectedSize"],[3,"Reader"],[3,"Writer"]]},\
"cjdns_core":{"doc":"Entities operated by CJDNS.","i":[[3,"EncodingScheme","cjdns_core","Encoding scheme - an iterable list of scheme forms.",null,null],[3,"EncodingSchemeForm","","A form of an encoding scheme. Form is used as follows to…",null,null],[3,"PathHop","","An intermediate node in a path between the two nodes.",null,null],[12,"label_p","","Label for a director to the previous hop.",0,null],[12,"label_n","","Label for a director to the next hop.",0,null],[12,"encoding_scheme","","Encoding scheme used by the current node.",0,null],[3,"RoutingLabel","","Routing label (a sequence of encoded Directors).",null,null],[4,"EncodingSerializationError","","Error returned when encoding scheme for…",null,null],[13,"BadSerializedData","","Returned when scheme serialization fails",1,null],[13,"BadEncodingForm","","Returned when encoding form deserialization fails",1,null],[4,"SchemeValidationError","","Error returned when scheme validation fails",null,null],[13,"InvalidFormsAmount","","Invalid scheme forms length. Should be in 1..32 range.",2,null],[13,"SingleFormWithPrefix","","Scheme with single form must not have non-empty prefix value",2,null],[13,"MultiFormBadPrefix","","Scheme with multiple forms must have non-empty prefix value",2,null],[13,"BitCountNotSorted","","Multiple forms should have `bit_count` in ascending order",2,null],[13,"DuplicatePrefix","","Multiple forms must have unique prefixes",2,null],[13,"TooBigForm","","Encoding scheme cannot be represented in the usable space…",2,null],[4,"LabelError","","Label string parsing errors.",null,null],[13,"MalformedRoutingLabelStringValue","","Routing label string form is not valid and can not be…",3,null],[13,"ZeroRoutingLabel","","Routing label is all-zeroes. This is not a valid label…",3,null],[5,"deserialize_scheme","","Parse byte vector array (bits sequence) and transform it…",null,[[],[["encodingserializationerror",4],["result",4],["encodingscheme",3]]]],[5,"serialize_scheme","","Store encoding scheme into a byte vector array (bits…",null,[[["encodingscheme",3]],[["encodingserializationerror",4],["vec",3],["result",4]]]],[0,"schemes","","Well-known encoding schemes",null,null],[3,"F4","cjdns_core::schemes","Fixed-length 4 bit scheme.",null,null],[3,"F8","","Fixed-length 8 bit scheme.",null,null],[3,"V48","","Variable-length 4 or 8 bit scheme.",null,null],[3,"V358","","Special case scheme. An encoding scheme consisting of 3, 5…",null,null],[3,"V37","","Variable-length 3 or 7 bit scheme.",null,null],[5,"all","","Returns an iterator over all the well-known encoding schemes",null,[[]]],[0,"schemes","cjdns_core","Well-known encoding schemes",null,null],[3,"F4","cjdns_core::schemes","Fixed-length 4 bit scheme.",null,null],[3,"F8","","Fixed-length 8 bit scheme.",null,null],[3,"V48","","Variable-length 4 or 8 bit scheme.",null,null],[3,"V358","","Special case scheme. An encoding scheme consisting of 3, 5…",null,null],[3,"V37","","Variable-length 3 or 7 bit scheme.",null,null],[5,"all","","Returns an iterator over all the well-known encoding schemes",null,[[]]],[11,"try_new","cjdns_core","Instantiates `EncodingSchemeForm`.",4,[[],[["result",4],["formvalidationerror",4]]]],[11,"params","","Returns encoding scheme form params in respected order:",4,[[]]],[11,"size_bits","","As a scheme is represented as an array of forms, this…",4,[[]]],[11,"try_new","","Instantiates `EncodingScheme`.",5,[[],[["result",4],["schemevalidationerror",4]]]],[11,"validate","","Validates encoding scheme.",5,[[],[["result",4],["schemevalidationerror",4]]]],[11,"new","","New instance",0,[[["encodingscheme",3],["option",4],["routinglabel",3]]]],[11,"try_new","","Create new non-zero routing label. Returns `None` if…",6,[[],["option",4]]],[11,"self_reference","","Create a new label which is a self-reference. Corresponds…",6,[[]]],[11,"bits","","Raw data of this routing label. Always non-zero.",6,[[]]],[11,"size","","Size in bytes of this routing label",6,[[]]],[0,"splice","","Routing label splice/unsplice routines.",null,null],[4,"SpliceError","cjdns_core::splice","Routing label splice failure.",null,null],[13,"LabelTooLong","","Label requires more bits than it is available in…",7,null],[13,"NotEnoughArguments","","Array argument must contain at least 2 items.",7,null],[13,"BadArgument","","Invalid function argument.",7,null],[13,"CannotUnsplice","","Unable to unsplice because provided destination doesn\'t…",7,null],[13,"CannotFindForm","","Can\'t find proper encoding form in encoding scheme: label…",7,null],[13,"CannotReencode","","Label can\'t be re-encoded with the given form.",7,null],[5,"splice","","This function takes one or more `RoutingLabel`s and…",null,[[],[["result",6],["routinglabel",3]]]],[5,"get_encoding_form","","Get the encoding form used for the first director of the…",null,[[["encodingscheme",3],["routinglabel",3],["labelbits",8]],["result",6]]],[5,"re_encode","","Re-encode a `label` to the encoding form specified by…",null,[[["encodingscheme",3],["option",4],["routinglabel",3],["labelbits",8]],[["result",6],["routinglabel",3]]]],[5,"is_one_hop","","Tests if a `label` contains only one hop.",null,[[["encodingscheme",3],["routinglabel",3],["labelbits",8]],["result",6]]],[5,"build_label","","This will construct a label using an array representation…",null,[[],["result",6]]],[5,"routes_through","","This will return `true` if the node at the end of the…",null,[[["routinglabel",3],["labelbits",8]]]],[5,"unsplice","","Convert a full path to a representation which a node along…",null,[[["routinglabel",3],["labelbits",8]],[["result",6],["routinglabel",3]]]],[6,"Result","","Result type alias.",null,null],[6,"DefaultRoutingLabel","cjdns_core","A 64 bit routing label.",null,null],[8,"LabelBits","","Describes types which can act as routing label\'s…",null,null],[18,"ZERO","","Zero value for this data type.",8,null],[18,"ONE","","One (1) value for this data type.",8,null],[18,"BIT_SIZE","","Bit size of the this data type.",8,null],[18,"MAX_PAYLOAD_BITS","","Maximum number of bits a label payload can occupy.",8,null],[10,"highest_set_bit","","Index of highest set bit in binary representation.",8,[[],["option",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cjdns_core::schemes","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","cjdns_core::splice","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","cjdns_core","",5,[[],["encodingscheme",3]]],[11,"clone","","",4,[[],["encodingschemeform",3]]],[11,"clone","","",6,[[],["routinglabel",3]]],[11,"clone","","",3,[[],["labelerror",4]]],[11,"cmp","","",4,[[["encodingschemeform",3]],["ordering",4]]],[11,"eq","","",5,[[["encodingscheme",3]]]],[11,"ne","","",5,[[["encodingscheme",3]]]],[11,"eq","","",4,[[["encodingschemeform",3]]]],[11,"ne","","",4,[[["encodingschemeform",3]]]],[11,"eq","","",2,[[["schemevalidationerror",4]]]],[11,"eq","","",1,[[["encodingserializationerror",4]]]],[11,"eq","","",0,[[["pathhop",3]]]],[11,"ne","","",0,[[["pathhop",3]]]],[11,"eq","","",6,[[["routinglabel",3]]]],[11,"ne","","",6,[[["routinglabel",3]]]],[11,"eq","","",3,[[["labelerror",4]]]],[11,"eq","cjdns_core::splice","",7,[[["spliceerror",4]]]],[11,"partial_cmp","cjdns_core","",4,[[["encodingschemeform",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["encodingschemeform",3]]]],[11,"le","","",4,[[["encodingschemeform",3]]]],[11,"gt","","",4,[[["encodingschemeform",3]]]],[11,"ge","","",4,[[["encodingschemeform",3]]]],[11,"deref","","",5,[[]]],[11,"deref","cjdns_core::schemes","",9,[[],["encodingscheme",3]]],[11,"deref","","",10,[[],["encodingscheme",3]]],[11,"deref","","",11,[[],["encodingscheme",3]]],[11,"deref","","",12,[[],["encodingscheme",3]]],[11,"deref","","",13,[[],["encodingscheme",3]]],[11,"fmt","cjdns_core","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core::splice","",7,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core::splice","",7,[[["formatter",3]],["result",6]]],[11,"try_from","cjdns_core","",6,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"initialize","cjdns_core::schemes","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"initialize","","",13,[[]]],[18,"ZERO","cjdns_core","Zero value for this data type.",8,null],[18,"ONE","","One (1) value for this data type.",8,null],[18,"BIT_SIZE","","Bit size of the this data type.",8,null],[18,"MAX_PAYLOAD_BITS","","Maximum number of bits a label payload can occupy.",8,null]],"p":[[3,"PathHop"],[4,"EncodingSerializationError"],[4,"SchemeValidationError"],[4,"LabelError"],[3,"EncodingSchemeForm"],[3,"EncodingScheme"],[3,"RoutingLabel"],[4,"SpliceError"],[8,"LabelBits"],[3,"F4"],[3,"F8"],[3,"V48"],[3,"V358"],[3,"V37"]]},\
"cjdns_crypto":{"doc":"CJDNS Crypto library. Wraps sodiumoxide so that the same…","i":[[0,"hash","cjdns_crypto","Hashing",null,null],[0,"sha256","cjdns_crypto::hash","`SHA-256`.",null,null],[17,"DIGESTBYTES","cjdns_crypto::hash::sha256","Number of bytes in a `Digest`.",null,null],[17,"BLOCKBYTES","","Block size of the hash function.",null,null],[3,"Digest","","Digest-structure",null,null],[12,"0","","",0,null],[5,"hash","","`hash` hashes a message `m`. It returns a hash `h`.",null,[[],["digest",3]]],[3,"State","","`State` contains the state for multi-part (streaming) hash…",null,null],[0,"sha512","cjdns_crypto::hash","`SHA-512`.",null,null],[17,"DIGESTBYTES","cjdns_crypto::hash::sha512","Number of bytes in a `Digest`.",null,null],[17,"BLOCKBYTES","","Block size of the hash function.",null,null],[3,"Digest","","Digest-structure",null,null],[12,"0","","",1,null],[5,"hash","","`hash` hashes a message `m`. It returns a hash `h`.",null,[[],["digest",3]]],[3,"State","","`State` contains the state for multi-part (streaming) hash…",null,null],[17,"DIGESTBYTES","cjdns_crypto::hash","Number of bytes in a `Digest`.",null,null],[17,"BLOCKBYTES","","Block size of the hash function.",null,null],[5,"hash","","`hash` hashes a message `m`. It returns a hash `h`.",null,[[],["digest",3]]],[3,"Digest","","Digest-structure",null,null],[12,"0","","",1,null],[3,"State","","`State` contains the state for multi-part (streaming) hash…",null,null],[0,"scalarmult","cjdns_crypto","Scalar multiplication",null,null],[0,"curve25519","cjdns_crypto::scalarmult","`crypto_scalarmult_curve25519` specified in Cryptography…",null,null],[17,"GROUPELEMENTBYTES","cjdns_crypto::scalarmult::curve25519","Number of bytes in a `GroupElement`.",null,null],[17,"SCALARBYTES","","Number of bytes in a `Scalar`.",null,null],[3,"Scalar","","`Scalar` value (integer in byte representation)",null,null],[12,"0","","",2,null],[3,"GroupElement","","`GroupElement`",null,null],[12,"0","","",3,null],[5,"scalarmult","","`scalarmult()` multiplies a group element `p` by an…",null,[[["groupelement",3],["scalar",3]],[["result",4],["groupelement",3]]]],[5,"scalarmult_base","","`scalarmult_base()` computes the scalar product of a…",null,[[["scalar",3]],["groupelement",3]]],[17,"GROUPELEMENTBYTES","cjdns_crypto::scalarmult","Number of bytes in a `GroupElement`.",null,null],[17,"SCALARBYTES","","Number of bytes in a `Scalar`.",null,null],[5,"scalarmult","","`scalarmult()` multiplies a group element `p` by an…",null,[[["groupelement",3],["scalar",3]],[["result",4],["groupelement",3]]]],[5,"scalarmult_base","","`scalarmult_base()` computes the scalar product of a…",null,[[["scalar",3]],["groupelement",3]]],[3,"Scalar","","`Scalar` value (integer in byte representation)",null,null],[12,"0","","",2,null],[3,"GroupElement","","`GroupElement`",null,null],[12,"0","","",3,null],[0,"sign","cjdns_crypto","Public-key signatures",null,null],[0,"ed25519","cjdns_crypto::sign","`ed25519`, a signature scheme specified in Ed25519. This…",null,null],[17,"SEEDBYTES","cjdns_crypto::sign::ed25519","Number of bytes in a `Seed`.",null,null],[17,"SECRETKEYBYTES","","Number of bytes in a `SecretKey`.",null,null],[17,"PUBLICKEYBYTES","","Number of bytes in a `PublicKey`.",null,null],[17,"SIGNATUREBYTES","","Number of bytes in a `Signature`.",null,null],[3,"Seed","","`Seed` that can be used for keypair generation",null,null],[12,"0","","",4,null],[3,"SecretKey","","`SecretKey` for signatures",null,null],[12,"0","","",5,null],[3,"PublicKey","","`PublicKey` for signatures",null,null],[12,"0","","",6,null],[3,"Signature","","Detached signature",null,null],[12,"0","","",7,null],[5,"gen_keypair","","`gen_keypair()` randomly generates a secret key and a…",null,[[]]],[5,"keypair_from_seed","","`keypair_from_seed()` computes a secret key and a…",null,[[["seed",3]]]],[5,"sign","","`sign()` signs a message `m` using the signer\'s secret key…",null,[[["secretkey",3]],["vec",3]]],[5,"verify","","`verify()` verifies the signature in `sm` using the…",null,[[["publickey",3]],[["result",4],["vec",3]]]],[5,"sign_detached","","`sign_detached()` signs a message `m` using the signer\'s…",null,[[["secretkey",3]],["signature",3]]],[5,"verify_detached","","`verify_detached()` verifies the signature in `sig`…",null,[[["signature",3],["publickey",3]]]],[3,"State","","State for multi-part (streaming) computation of signature.",null,null],[17,"SEEDBYTES","cjdns_crypto::sign","Number of bytes in a `Seed`.",null,null],[17,"SECRETKEYBYTES","","Number of bytes in a `SecretKey`.",null,null],[17,"PUBLICKEYBYTES","","Number of bytes in a `PublicKey`.",null,null],[17,"SIGNATUREBYTES","","Number of bytes in a `Signature`.",null,null],[5,"gen_keypair","","`gen_keypair()` randomly generates a secret key and a…",null,[[]]],[5,"keypair_from_seed","","`keypair_from_seed()` computes a secret key and a…",null,[[["seed",3]]]],[5,"sign","","`sign()` signs a message `m` using the signer\'s secret key…",null,[[["secretkey",3]],["vec",3]]],[5,"verify","","`verify()` verifies the signature in `sm` using the…",null,[[["publickey",3]],[["result",4],["vec",3]]]],[5,"sign_detached","","`sign_detached()` signs a message `m` using the signer\'s…",null,[[["secretkey",3]],["signature",3]]],[5,"verify_detached","","`verify_detached()` verifies the signature in `sig`…",null,[[["signature",3],["publickey",3]]]],[3,"Seed","","`Seed` that can be used for keypair generation",null,null],[12,"0","","",4,null],[3,"SecretKey","","`SecretKey` for signatures",null,null],[12,"0","","",5,null],[3,"PublicKey","","`PublicKey` for signatures",null,null],[12,"0","","",6,null],[3,"Signature","","Detached signature",null,null],[12,"0","","",7,null],[3,"State","","State for multi-part (streaming) computation of signature.",null,null],[5,"init","cjdns_crypto","`init()` initializes the sodium library and chooses faster…",null,[[],["result",4]]],[0,"randombytes","","Cryptographic random number generation.",null,null],[5,"randombytes","cjdns_crypto::randombytes","`randombytes()` randomly generates size bytes of data.",null,[[],["vec",3]]],[5,"randombytes_into","","`randombytes_into()` fills a buffer `buf` with random data.",null,[[]]],[5,"randombytes_uniform","","`randombytes_uniform()` returns an unpredictable value…",null,[[]]],[0,"sign_ext","cjdns_crypto","",null,null],[5,"sign_ed25519_pk_to_curve25519","cjdns_crypto::sign_ext","",null,[[["publickey",3]],["result",4]]],[17,"SIGN_KEY_SIZE","","",null,null],[11,"from","cjdns_crypto::hash::sha256","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","cjdns_crypto::hash","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","cjdns_crypto::scalarmult","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cjdns_crypto::sign","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"clone","cjdns_crypto::hash","",1,[[],["digest",3]]],[11,"clone","cjdns_crypto::scalarmult","",3,[[],["groupelement",3]]],[11,"clone","","",2,[[],["scalar",3]]],[11,"clone","cjdns_crypto::hash::sha256","",8,[[],["state",3]]],[11,"clone","","",0,[[],["digest",3]]],[11,"clone","cjdns_crypto::sign","",10,[[],["state",3]]],[11,"clone","cjdns_crypto::hash","",9,[[],["state",3]]],[11,"clone","cjdns_crypto::sign","",5,[[],["secretkey",3]]],[11,"clone","","",4,[[],["seed",3]]],[11,"clone","","",7,[[],["signature",3]]],[11,"clone","","",6,[[],["publickey",3]]],[11,"hash","cjdns_crypto::hash","",1,[[]]],[11,"hash","cjdns_crypto::sign","",6,[[]]],[11,"hash","cjdns_crypto::hash::sha256","",0,[[]]],[11,"hash","cjdns_crypto::sign","",7,[[]]],[11,"drop","","",4,[[]]],[11,"drop","cjdns_crypto::scalarmult","",3,[[]]],[11,"drop","cjdns_crypto::sign","",5,[[]]],[11,"drop","cjdns_crypto::scalarmult","",2,[[]]],[11,"default","cjdns_crypto::hash","",9,[[],["state",3]]],[11,"default","cjdns_crypto::hash::sha256","",8,[[],["state",3]]],[11,"default","cjdns_crypto::sign","",10,[[],["state",3]]],[11,"as_ref","cjdns_crypto::scalarmult","",2,[[]]],[11,"as_ref","cjdns_crypto::sign","",7,[[]]],[11,"as_ref","","",5,[[]]],[11,"as_ref","cjdns_crypto::scalarmult","",3,[[]]],[11,"as_ref","cjdns_crypto::sign","",6,[[]]],[11,"as_ref","cjdns_crypto::hash::sha256","",0,[[]]],[11,"as_ref","cjdns_crypto::hash","",1,[[]]],[11,"as_ref","cjdns_crypto::sign","",4,[[]]],[11,"cmp","","",7,[[["signature",3]],["ordering",4]]],[11,"cmp","cjdns_crypto::hash","",1,[[["digest",3]],["ordering",4]]],[11,"cmp","cjdns_crypto::sign","",6,[[["publickey",3]],["ordering",4]]],[11,"cmp","cjdns_crypto::hash::sha256","",0,[[["digest",3]],["ordering",4]]],[11,"fmt","cjdns_crypto::sign","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::hash::sha256","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::sign","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::hash","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::scalarmult","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::sign","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","cjdns_crypto::scalarmult","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","cjdns_crypto::sign","",6,[[["rangefull",3]]]],[11,"index","cjdns_crypto::scalarmult","",2,[[["rangeto",3]]]],[11,"index","cjdns_crypto::sign","",7,[[["range",3]]]],[11,"index","","",7,[[["rangeto",3]]]],[11,"index","","",4,[[["rangeto",3]]]],[11,"index","","",7,[[["rangefrom",3]]]],[11,"index","","",5,[[["range",3]]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index","cjdns_crypto::scalarmult","",2,[[["range",3]]]],[11,"index","cjdns_crypto::hash","",1,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::sign","",5,[[["rangefull",3]]]],[11,"index","cjdns_crypto::scalarmult","",2,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::hash","",1,[[["rangeto",3]]]],[11,"index","cjdns_crypto::hash::sha256","",0,[[["rangeto",3]]]],[11,"index","cjdns_crypto::scalarmult","",3,[[["range",3]]]],[11,"index","cjdns_crypto::hash::sha256","",0,[[["range",3]]]],[11,"index","cjdns_crypto::sign","",6,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::hash","",1,[[["range",3]]]],[11,"index","cjdns_crypto::sign","",6,[[["range",3]]]],[11,"index","cjdns_crypto::hash::sha256","",0,[[["rangefrom",3]]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","cjdns_crypto::sign","",5,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::scalarmult","",3,[[["rangeto",3]]]],[11,"index","cjdns_crypto::sign","",4,[[["rangefull",3]]]],[11,"index","cjdns_crypto::scalarmult","",3,[[["rangefull",3]]]],[11,"index","","",3,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::sign","",6,[[["rangeto",3]]]],[11,"index","","",5,[[["rangeto",3]]]],[11,"index","","",4,[[["range",3]]]],[11,"index","","",4,[[["rangefrom",3]]]],[11,"index","cjdns_crypto::hash","",1,[[["rangefull",3]]]],[11,"serialize","cjdns_crypto::hash::sha256","",0,[[],["result",4]]],[11,"serialize","cjdns_crypto::scalarmult","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","cjdns_crypto::sign","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","cjdns_crypto::hash","",1,[[],["result",4]]],[11,"serialize","cjdns_crypto::sign","",5,[[],["result",4]]],[11,"eq","","",4,[[["seed",3]]]],[11,"eq","","",5,[[["secretkey",3]]]],[11,"eq","cjdns_crypto::hash","",1,[[["digest",3]]]],[11,"eq","cjdns_crypto::hash::sha256","",0,[[["digest",3]]]],[11,"eq","cjdns_crypto::sign","",7,[[["signature",3]]]],[11,"eq","cjdns_crypto::scalarmult","",2,[[["scalar",3]]]],[11,"eq","cjdns_crypto::sign","",6,[[["publickey",3]]]],[11,"eq","cjdns_crypto::scalarmult","",3,[[["groupelement",3]]]],[11,"partial_cmp","cjdns_crypto::sign","",7,[[["signature",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["signature",3]]]],[11,"le","","",7,[[["signature",3]]]],[11,"ge","","",7,[[["signature",3]]]],[11,"gt","","",7,[[["signature",3]]]],[11,"partial_cmp","","",6,[[["publickey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["publickey",3]]]],[11,"le","","",6,[[["publickey",3]]]],[11,"ge","","",6,[[["publickey",3]]]],[11,"gt","","",6,[[["publickey",3]]]],[11,"partial_cmp","cjdns_crypto::hash::sha256","",0,[[["digest",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["digest",3]]]],[11,"le","","",0,[[["digest",3]]]],[11,"ge","","",0,[[["digest",3]]]],[11,"gt","","",0,[[["digest",3]]]],[11,"partial_cmp","cjdns_crypto::hash","",1,[[["digest",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["digest",3]]]],[11,"le","","",1,[[["digest",3]]]],[11,"ge","","",1,[[["digest",3]]]],[11,"gt","","",1,[[["digest",3]]]],[11,"deserialize","cjdns_crypto::sign","",5,[[],[["result",4],["secretkey",3]]]],[11,"deserialize","","",6,[[],[["publickey",3],["result",4]]]],[11,"deserialize","","",7,[[],[["result",4],["signature",3]]]],[11,"deserialize","cjdns_crypto::hash","",1,[[],[["result",4],["digest",3]]]],[11,"deserialize","cjdns_crypto::hash::sha256","",0,[[],[["result",4],["digest",3]]]],[11,"deserialize","cjdns_crypto::sign","",4,[[],[["seed",3],["result",4]]]],[11,"deserialize","cjdns_crypto::scalarmult","",3,[[],[["result",4],["groupelement",3]]]],[11,"deserialize","","",2,[[],[["scalar",3],["result",4]]]],[11,"from_slice","cjdns_crypto::hash::sha256","`from_slice()` creates an object from a byte slice",0,[[],[["digest",3],["option",4]]]],[11,"new","","`new` constructs and initializes a new `State`.",8,[[],["state",3]]],[11,"update","","`update` updates the `State` with `data`. `update` can be…",8,[[]]],[11,"finalize","","`finalize` finalizes the state and returns the digest…",8,[[],["digest",3]]],[11,"from_slice","cjdns_crypto::hash","`from_slice()` creates an object from a byte slice",1,[[],[["digest",3],["option",4]]]],[11,"new","","`new` constructs and initializes a new `State`.",9,[[],["state",3]]],[11,"update","","`update` updates the `State` with `data`. `update` can be…",9,[[]]],[11,"finalize","","`finalize` finalizes the state and returns the digest…",9,[[],["digest",3]]],[11,"from_slice","cjdns_crypto::scalarmult","`from_slice()` creates an object from a byte slice",2,[[],[["scalar",3],["option",4]]]],[11,"from_slice","","`from_slice()` creates an object from a byte slice",3,[[],[["groupelement",3],["option",4]]]],[11,"from_slice","cjdns_crypto::sign","`from_slice()` creates an object from a byte slice",4,[[],[["seed",3],["option",4]]]],[11,"public_key","","`public_key()` computes the corresponding public key for a…",5,[[],["publickey",3]]],[11,"from_slice","","`from_slice()` creates an object from a byte slice",5,[[],[["option",4],["secretkey",3]]]],[11,"from_slice","","`from_slice()` creates an object from a byte slice",6,[[],[["option",4],["publickey",3]]]],[11,"from_slice","","`from_slice()` creates an object from a byte slice",7,[[],[["option",4],["signature",3]]]],[11,"init","","`init()` initialize a streaming signing state.",10,[[],["state",3]]],[11,"update","","`update()` can be called more than once in order to…",10,[[]]],[11,"finalize","","`finalize()` finalizes the hashing computation and returns…",10,[[["secretkey",3]],["signature",3]]],[11,"verify","","`veriry` verifies the signature in `sm` using the signer\'s…",10,[[["signature",3],["publickey",3]]]]],"p":[[3,"Digest"],[3,"Digest"],[3,"Scalar"],[3,"GroupElement"],[3,"Seed"],[3,"SecretKey"],[3,"PublicKey"],[3,"Signature"],[3,"State"],[3,"State"],[3,"State"]]},\
"cjdns_ctrl":{"doc":"Parsing/serializing CTRL messages","i":[[3,"CtrlMessage","cjdns_ctrl","Serialized control message",null,null],[12,"msg_type","","",0,null],[12,"msg_data","","",0,null],[3,"ErrorData","","Body data for error type messages",null,null],[12,"err_type","","",1,null],[12,"switch_header","","",1,null],[12,"additional","","",1,null],[3,"PingData","","Body data for ping type control messages",null,null],[12,"version","","",2,null],[12,"key","","",2,null],[12,"content","","",2,null],[4,"CtrlMessageData","","Control message serialized body data",null,null],[13,"PingData","","",3,null],[13,"ErrorData","","",3,null],[13,"SuperNodeQueryData","","",3,null],[4,"CtrlMessageType","","Control message type, which is considered as message header",null,null],[13,"Error","","",4,null],[13,"Ping","","",4,null],[13,"Pong","","",4,null],[13,"KeyPing","","",4,null],[13,"KeyPong","","",4,null],[13,"GetSuperNodeQuery","","",4,null],[13,"GetSuperNodeResponse","","",4,null],[4,"ErrorMessageType","","Concrete types of error for control error message",null,null],[13,"None","","No error, everything is ok.",5,null],[13,"MalformedAddress","","The switch label was malformed.",5,null],[13,"Flood","","Packet dropped because link is congested.",5,null],[13,"LinkLimitExceeded","","Packet dropped because node has oversent its limit.",5,null],[13,"OversizeMessage","","Message too big to send.",5,null],[13,"UndersizedMessage","","Message smaller than expected headers.",5,null],[13,"Authentication","","Authentication failed.",5,null],[13,"Invalid","","Header is invalid or checksum failed.",5,null],[13,"Undeliverable","","Message could not be sent to its destination through no…",5,null],[13,"LoopRoute","","The route enters and leaves through the same interface in…",5,null],[13,"ReturnPathInvalid","","The switch is unable to represent the return path.",5,null],[13,"Unrecognized","","",5,null],[18,"HEADER_SIZE","","Control message header size, which is considered as…",0,null],[11,"parse","","Parses raw bytes into `CtrlMessage`.",0,[[],[["parseerror",4],["result",4]]]],[11,"serialize","","Serializes `CtrlMessage` instance.",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"get_error_data","","",0,[[],[["errordata",3],["option",4]]]],[11,"get_ping_data","","",0,[[],[["option",4],["pingdata",3]]]],[18,"MIN_SIZE","","`ErrorData` minimum size. First 4 bytes are reserved for…",1,null],[11,"parse","","Parses raw bytes into `ErrorData`",1,[[],[["parseerror",4],["result",4]]]],[11,"serialize","","Serializes `ErrorData` instance.",1,[[],[["serializeerror",4],["result",4],["vec",3]]]],[18,"MIN_SIZE","","Minimum ping data size",2,null],[11,"parse","","Parses raw bytes into `PingData`.",2,[[["ctrlmessagetype",4]],[["parseerror",4],["result",4]]]],[11,"serialize","","Serialized `PingData` instance.",2,[[["ctrlmessagetype",4]],[["serializeerror",4],["result",4],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"clone","","",0,[[],["ctrlmessage",3]]],[11,"clone","","",4,[[],["ctrlmessagetype",4]]],[11,"clone","","",3,[[],["ctrlmessagedata",4]]],[11,"clone","","",1,[[],["errordata",3]]],[11,"clone","","",5,[[],["errormessagetype",4]]],[11,"clone","","",2,[[],["pingdata",3]]],[11,"eq","","",0,[[["ctrlmessage",3]]]],[11,"ne","","",0,[[["ctrlmessage",3]]]],[11,"eq","","",4,[[["ctrlmessagetype",4]]]],[11,"eq","","",3,[[["ctrlmessagedata",4]]]],[11,"ne","","",3,[[["ctrlmessagedata",4]]]],[11,"eq","","",1,[[["errordata",3]]]],[11,"ne","","",1,[[["errordata",3]]]],[11,"eq","","",5,[[["errormessagetype",4]]]],[11,"eq","","",2,[[["pingdata",3]]]],[11,"ne","","",2,[[["pingdata",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"try_from","","",4,[[],[["result",4],["tryfromprimitiveerror",3]]]],[11,"from_primitive","","",5,[[]]],[11,"try_from_primitive","","",4,[[],[["result",4],["tryfromprimitiveerror",3]]]],[11,"try_from_primitive","","",5,[[],[["result",4],["tryfromprimitiveerror",3]]]]],"p":[[3,"CtrlMessage"],[3,"ErrorData"],[3,"PingData"],[4,"CtrlMessageData"],[4,"CtrlMessageType"],[4,"ErrorMessageType"]]},\
"cjdns_hdr":{"doc":"Library for parsing and serializing cjdns route and data…","i":[[4,"ParseError","cjdns_hdr","Errors returned when parsing message or its parts (for…",null,null],[13,"InvalidPacketSize","","Data with wrong size received to parser",0,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",0,null],[13,"InvalidData","","Received unusable data. Description message can be provided.",0,null],[13,"InvalidChecksum","","Checksum match failed. Matching checksum values can be…",0,null],[4,"SerializeError","","Errors returned when serializing message or its parts (for…",null,null],[13,"UnrecognizedData","","Trying to serialize data with values unintended to be…",1,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",1,null],[13,"InvalidData","","Trying to serialize unusable data. Description message can…",1,null],[3,"DataHeader","","Deserialized data header struct.",null,null],[12,"version","","",2,null],[12,"content_type","","",2,null],[3,"RouteHeader","","Deserialized route header struct.",null,null],[12,"public_key","","",3,null],[12,"ip6","","",3,null],[12,"version","","",3,null],[12,"switch_header","","",3,null],[12,"is_incoming","","",3,null],[12,"is_ctrl","","",3,null],[3,"SwitchHeader","","Deserialized switch header struct.",null,null],[12,"label","","",4,null],[12,"congestion","","",4,null],[12,"suppress_errors","","",4,null],[12,"version","","",4,null],[12,"label_shift","","",4,null],[12,"penalty","","",4,null],[4,"ContentType","","Header content types.",null,null],[13,"Ip6Hop","","",5,null],[13,"Ip6Icmp","","",5,null],[13,"Ip6Igmp","","",5,null],[13,"Ip6Ipv4","","",5,null],[13,"Ip6Tcp","","",5,null],[13,"Ip6Egp","","",5,null],[13,"Ip6Pup","","",5,null],[13,"Ip6Udp","","",5,null],[13,"Ip6Idp","","",5,null],[13,"Ip6Tp","","",5,null],[13,"Ip6Dccp","","",5,null],[13,"Ip6Ipv6","","",5,null],[13,"Ip6Rsvp","","",5,null],[13,"Ip6Gre","","",5,null],[13,"Ip6Esp","","",5,null],[13,"Ip6Ah","","",5,null],[13,"Ip6Icmpv6","","",5,null],[13,"Ip6Mtp","","",5,null],[13,"Ip6Beetph","","",5,null],[13,"Ip6Encap","","",5,null],[13,"Ip6Pim","","",5,null],[13,"Ip6Comp","","",5,null],[13,"Ip6Sctp","","",5,null],[13,"Ip6Udplite","","",5,null],[13,"Cjdht","","Bencoded inter-router DHT message",5,null],[13,"Iptun","","Bencoded inter-router DHT message",5,null],[13,"Ctrl","","This content type will never appear in the wild, it…",5,null],[13,"Other","","Unrecognized or user-defined content type.",5,null],[18,"IP6_MAX","","The lowest 255 message types are reserved for cjdns/IPv6…",5,null],[18,"RESERVED","","Reserved for future allocation",5,null],[18,"RESERVED_MAX","","",5,null],[18,"AVAILABLE","","Content types in the AVAILABLE range are not defined and…",5,null],[18,"MAX","","Maximum possible defined value for the content type",5,null],[11,"from_u16","","",5,[[]]],[11,"try_to_u16","","",5,[[],["option",4]]],[18,"SIZE","","Size of serialized `DataHeader`",2,null],[18,"CURRENT_VERSION","","Current version of `DataHeader` which is automatically…",2,null],[11,"parse","","Parses raw bytes into `DataHeader` struct.",2,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `DataHeader` instance.",2,[[],[["result",4],["vec",3],["serializeerror",4]]]],[18,"SIZE","","Size of serialized `RouteHeader`",3,null],[11,"parse","","Parses raw bytes into `RouteHeader` struct.",3,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serialized `RouteHeader` instance.",3,[[],[["result",4],["vec",3],["serializeerror",4]]]],[18,"SIZE","","Size of serialized `SwitchHeader`",4,null],[18,"CURRENT_VERSION","","Current version of `SwitchHeader` which is automatically…",4,null],[11,"parse","","Parses raw bytes into `SwitchHeader` struct.",4,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `SwitchHeader` instance.",4,[[],[["result",4],["vec",3],["serializeerror",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"clone","","",1,[[],["serializeerror",4]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"eq","","",1,[[["serializeerror",4]]]],[11,"ne","","",1,[[["serializeerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",5,[[]]],[11,"clone","","",5,[[],["contenttype",4]]],[11,"clone","","",2,[[],["dataheader",3]]],[11,"clone","","",3,[[],["routeheader",3]]],[11,"clone","","",4,[[],["switchheader",3]]],[11,"default","","",2,[[]]],[11,"eq","","",5,[[["contenttype",4]]]],[11,"eq","","",2,[[["dataheader",3]]]],[11,"ne","","",2,[[["dataheader",3]]]],[11,"eq","","",3,[[["routeheader",3]]]],[11,"ne","","",3,[[["routeheader",3]]]],[11,"eq","","",4,[[["switchheader",3]]]],[11,"ne","","",4,[[["switchheader",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"from_primitive","","",5,[[]]],[11,"try_from_primitive","","",5,[[],[["result",4],["tryfromprimitiveerror",3]]]]],"p":[[4,"ParseError"],[4,"SerializeError"],[3,"DataHeader"],[3,"RouteHeader"],[3,"SwitchHeader"],[4,"ContentType"]]},\
"cjdns_keys":{"doc":"CJDNS keys types.","i":[[3,"CJDNSKeys","cjdns_keys","Convenience type for managing all CJDNS key types in one…",null,null],[12,"private_key","","CJDNS private key.",0,null],[12,"public_key","","CJDNS public key",0,null],[12,"ip6","","CJDNS ip6",0,null],[3,"CJDNSKeysApi","","Type that encapsulates some crate functions making it…",null,null],[3,"CJDNS_IP6","","CJDNS IP6 type",null,null],[3,"CJDNSPrivateKey","","CJDNS private key type",null,null],[3,"CJDNSPublicKey","","CJDNS public key type",null,null],[11,"new","","Initialization function, which guarantees on success that…",1,[[],["result",4]]],[11,"key_pair","","Convenience method that generates safely valid key \\\"pair\\\".…",1,[[],["cjdnskeys",3]]],[11,"gen_private_key","","Safely generates private key.",1,[[],["cjdnsprivatekey",3]]],[18,"SIZE","","Size in bytes of the IPv6 address",2,null],[11,"is_zero","","",2,[[]]],[18,"SIZE","","Size in bytes of the private key",3,null],[11,"is_zero","","",3,[[]]],[18,"SIZE","","Size in bytes of the public key",4,null],[11,"is_zero","","",4,[[]]],[6,"PrivateKey","","CJDNS private key type",null,null],[6,"PublicKey","","CJDNS public key type",null,null],[6,"IpV6","","CJDNS IPv6 type",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"from","","",4,[[["cjdnsprivatekey",3]]]],[11,"from","","",4,[[]]],[11,"clone","","",1,[[],["cjdnskeysapi",3]]],[11,"clone","","",0,[[],["cjdnskeys",3]]],[11,"clone","","",2,[[],["cjdns_ip6",3]]],[11,"clone","","",3,[[],["cjdnsprivatekey",3]]],[11,"clone","","",4,[[],["cjdnspublickey",3]]],[11,"cmp","","",2,[[["cjdns_ip6",3]],["ordering",4]]],[11,"eq","","",0,[[["cjdnskeys",3]]]],[11,"ne","","",0,[[["cjdnskeys",3]]]],[11,"eq","","",2,[[["cjdns_ip6",3]]]],[11,"ne","","",2,[[["cjdns_ip6",3]]]],[11,"eq","","",3,[[["cjdnsprivatekey",3]]]],[11,"ne","","",3,[[["cjdnsprivatekey",3]]]],[11,"eq","","",4,[[["cjdnspublickey",3]]]],[11,"ne","","",4,[[["cjdnspublickey",3]]]],[11,"partial_cmp","","",2,[[["cjdns_ip6",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["cjdns_ip6",3]]]],[11,"le","","",2,[[["cjdns_ip6",3]]]],[11,"gt","","",2,[[["cjdns_ip6",3]]]],[11,"ge","","",2,[[["cjdns_ip6",3]]]],[11,"deref","","",2,[[]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"try_from","","",2,[[["cjdnspublickey",3]],[["keycreationerror",4],["result",4]]]],[11,"try_from","","",2,[[],[["keycreationerror",4],["result",4]]]],[11,"try_from","","",2,[[],[["keycreationerror",4],["result",4]]]],[11,"try_from","","",3,[[],[["keycreationerror",4],["result",4]]]],[11,"try_from","","",4,[[],[["keycreationerror",4],["result",4]]]]],"p":[[3,"CJDNSKeys"],[3,"CJDNSKeysApi"],[3,"CJDNS_IP6"],[3,"CJDNSPrivateKey"],[3,"CJDNSPublicKey"]]},\
"cjdns_sniff":{"doc":"Library for sniffing and injecting cjdns traffic.","i":[[3,"Connection","cjdns_sniff","Admin connection to the CJDNS node.",null,null],[12,"functions","","List of available remote functions.",0,null],[3,"CtrlMessage","","Serialized control message",null,null],[12,"msg_type","","",1,null],[12,"msg_data","","",1,null],[4,"ContentType","","Header content types.",null,null],[13,"Ip6Hop","","",2,null],[13,"Ip6Icmp","","",2,null],[13,"Ip6Igmp","","",2,null],[13,"Ip6Ipv4","","",2,null],[13,"Ip6Tcp","","",2,null],[13,"Ip6Egp","","",2,null],[13,"Ip6Pup","","",2,null],[13,"Ip6Udp","","",2,null],[13,"Ip6Idp","","",2,null],[13,"Ip6Tp","","",2,null],[13,"Ip6Dccp","","",2,null],[13,"Ip6Ipv6","","",2,null],[13,"Ip6Rsvp","","",2,null],[13,"Ip6Gre","","",2,null],[13,"Ip6Esp","","",2,null],[13,"Ip6Ah","","",2,null],[13,"Ip6Icmpv6","","",2,null],[13,"Ip6Mtp","","",2,null],[13,"Ip6Beetph","","",2,null],[13,"Ip6Encap","","",2,null],[13,"Ip6Pim","","",2,null],[13,"Ip6Comp","","",2,null],[13,"Ip6Sctp","","",2,null],[13,"Ip6Udplite","","",2,null],[13,"Cjdht","","Bencoded inter-router DHT message",2,null],[13,"Iptun","","Bencoded inter-router DHT message",2,null],[13,"Ctrl","","This content type will never appear in the wild, it…",2,null],[13,"Other","","Unrecognized or user-defined content type.",2,null],[3,"Sniffer","","Wraps connection to cjdns admin interface and allows to…",null,null],[3,"Message","","Message that is being sent or received by cjdns router.",null,null],[12,"route_header","","Route header",3,null],[12,"content_type","","Data header - content type",3,null],[12,"content","","Message content (parsed accordingly to the `content_type`)",3,null],[12,"raw_bytes","","The whole message\'s serialized representation",3,null],[4,"Content","","Message content enum.",null,null],[13,"Empty","","Empty content",4,null],[13,"Bytes","","Raw binary of the content, if it cannot be decoded into…",4,null],[13,"Benc","","If the `content_type` is `ContentType::Cjdht` this is the…",4,null],[13,"Ctrl","","If the message is control message (`route_header.is_ctrl…",4,null],[4,"ConnectError","","Connection or disconnection error.",null,null],[13,"RpcError","","RPC invocation error (e.g. network error)",5,null],[13,"BadResponse","","Bad RPC response (unrecognized message format etc)",5,null],[13,"SocketError","","UDP socket error",5,null],[4,"SendError","","Error while sending message.",null,null],[13,"SerializeError","","Generic serialization error",6,null],[13,"BencodeError","","Bencode serialization error",6,null],[13,"SocketError","","UDP socket error",6,null],[13,"WriteError","","Unable to write all the data to the socket (too big message)",6,null],[4,"ReceiveError","","Error while receiving message.",null,null],[13,"SocketError","","UDP socket error",7,null],[13,"ParseError","","Generic deserialization error",7,null],[11,"sniff_traffic","","Create new `Sniffer` instance by connecting to a cjdns node.",8,[[["contenttype",4],["connection",3]]]],[11,"send","","Send a message. Destination is an optional argument, if…",8,[[["message",3],["option",4]]]],[11,"receive","","Receive a message.",8,[[]]],[11,"disconnect","","Disconnect from cjdns router. Failing to do so would…",8,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"as_fail","","",5,[[],["fail",8]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_fail","","",6,[[],["fail",8]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"vzip","","",7,[[]]],[11,"clone","","",0,[[],["connection",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["ctrlmessage",3]]],[11,"eq","","",1,[[["ctrlmessage",3]]]],[11,"ne","","",1,[[["ctrlmessage",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",2,[[],["contenttype",4]]],[11,"eq","","",2,[[["contenttype",4]]]],[11,"from","","",2,[[],["contenttype",4]]],[11,"from_primitive","","",2,[[],["contenttype",4]]],[11,"try_from_primitive","","",2,[[],[["tryfromprimitiveerror",3],["contenttype",4],["result",4]]]],[11,"clone","","",3,[[],["message",3]]],[11,"clone","","",4,[[],["content",4]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"invoke","","Call remote function on CJDNS router.",0,[[]]],[18,"HEADER_SIZE","","Control message header size, which is considered as…",1,null],[11,"parse","","Parses raw bytes into `CtrlMessage`.",1,[[],[["ctrlmessage",3],["parseerror",4],["result",4]]]],[11,"serialize","","Serializes `CtrlMessage` instance.",1,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"get_error_data","","",1,[[],[["errordata",3],["option",4]]]],[11,"get_ping_data","","",1,[[],[["pingdata",3],["option",4]]]],[18,"IP6_MAX","","The lowest 255 message types are reserved for cjdns/IPv6…",2,null],[18,"RESERVED","","Reserved for future allocation",2,null],[18,"RESERVED_MAX","","",2,null],[18,"AVAILABLE","","Content types in the AVAILABLE range are not defined and…",2,null],[18,"MAX","","Maximum possible defined value for the content type",2,null],[11,"from_u16","","",2,[[],["contenttype",4]]],[11,"try_to_u16","","",2,[[],["option",4]]]],"p":[[3,"Connection"],[3,"CtrlMessage"],[4,"ContentType"],[3,"Message"],[4,"Content"],[4,"ConnectError"],[4,"SendError"],[4,"ReceiveError"],[3,"Sniffer"]]},\
"cjdns_snode":{"doc":"CJDNS supernode","i":[[5,"main","cjdns_snode","Program entry point.",null,[[]]],[5,"run","","Main function.",null,[[]]],[0,"logger","","Logger initialization",null,null],[5,"now_sec","cjdns_snode::logger","",null,[[]]],[5,"short_file","","",null,[[]]],[5,"init","","",null,[[]]],[0,"args","cjdns_snode","Command-line arguments parsing.",null,null],[3,"Opts","cjdns_snode::args","CJDNS supernode.",null,null],[12,"config_file","","Config file path",0,null],[5,"parse","","Parse command line.",null,[[],["opts",3]]],[0,"config","cjdns_snode","Config file parsing.",null,null],[3,"Config","cjdns_snode::config","",null,null],[12,"connect","","",1,null],[12,"peers","","",1,null],[5,"load","","Load config file",null,[[["path",3]]]],[0,"message","cjdns_snode","Msgpack-encodable message that is sent between cjdns…",null,null],[3,"Message","cjdns_snode::message","Message consisting of an unique reply ID and message data.…",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[4,"MessageData","","",null,null],[13,"HELLO","","",3,null],[13,"OLLEH","","",3,null],[13,"PING","","",3,null],[13,"ACK","","",3,null],[13,"GET_DATA","","",3,null],[13,"DATA","","",3,null],[13,"INV","","",3,null],[4,"EncodingError","","",null,null],[13,"MsgpackSerializeError","","",4,null],[4,"DecodingError","","",null,null],[13,"MsgpackDeserializeError","","",5,null],[13,"BadMessageRootType","","",5,null],[13,"BadMessageRootArrayLength","","",5,null],[13,"BadIdFieldType","","",5,null],[13,"BadTypeFieldType","","",5,null],[13,"BadArgsCount","","",5,null],[13,"BadArgType","","",5,null],[13,"BadHelloVersionFieldType","","",5,null],[13,"UnrecognizedMessageType","","",5,null],[11,"decode_msgpack","","",2,[[],[["decodingerror",4],["result",4]]]],[11,"encode_msgpack","","",2,[[],[["encodingerror",4],["vec",3],["result",4]]]],[11,"from_msgpack","","",2,[[["value",4]],[["decodingerror",4],["result",4]]]],[11,"as_msgpack","","",2,[[],["value",4]]],[11,"new","","Create MessageData instance.",3,[[["vec",3],["option",4],["option",4],["option",4]],["option",4]]],[11,"from_msgpack","","",3,[[],[["decodingerror",4],["result",4]]]],[11,"as_msgpack","","",3,[[["vec",3],["value",4]],[["vec",3],["value",4]]]],[0,"pathsearch","cjdns_snode","Path search in a weighted graph.",null,null],[0,"dijkstra","cjdns_snode::pathsearch","Dijkstra path search implementation.",null,null],[3,"Dijkstra","cjdns_snode::pathsearch::dijkstra","Dijkstra path search.",null,null],[12,"nodes","","Links node with tag `<T>` to the list of ajacent nodest…",6,null],[11,"new","","Create new instance with empty graph.",6,[[]]],[0,"frontier","cjdns_snode::pathsearch","Frontier for the Dijkstra algorithm.",null,null],[3,"Frontier","cjdns_snode::pathsearch::frontier","Frontier for the Dijkstra algorithm. Internally uses…",null,null],[12,"queue","","Stores items in cost-descending order, so the item with…",7,null],[12,"index","","Links node tag `<T>` to the index in the `queue`.",7,null],[11,"new","","Create new empty instance.",7,[[],["frontier",3]]],[11,"key_fn","","Sorts by cost in descending order, then by tag.",7,[[]]],[11,"insertion_pos","","Find position in the queue where to insert a new item.",7,[[]]],[11,"push","","Insert a node with associated cost into the priority queue.",7,[[]]],[11,"pop","","Extract node with the least cost from the queue.",7,[[],["option",4]]],[11,"try_insert_or_decrease_cost","","Insert a node if it is not in the queue yet, otherwise…",7,[[]]],[0,"graph","cjdns_snode::pathsearch","Path solver graph traits.",null,null],[3,"PathSearchTree","cjdns_snode::pathsearch::graph","Tree that describes shortest path from a given start node…",null,null],[12,"start_node","","The starting node in every path.",8,null],[12,"paths","","Each tuple contains ending node and intermediate nodes as…",8,null],[8,"GraphBuilder","","Graph building functions.",null,null],[10,"add_node","","",9,[[["intoiterator",8]]]],[8,"GraphSolver","","Path finding functions.",null,null],[10,"path","","Find a path from `from` node to `to` node.",10,[[],["vec",3]]],[10,"reverse_path","","Find a reverse path from `to` node to `from` node.",10,[[],["vec",3]]],[10,"path_search_tree","","Build a Path Search Tree from a given node.",10,[[],["pathsearchtree",3]]],[0,"numtraits","cjdns_snode::pathsearch","Dijkstra algorithm helper traits.",null,null],[8,"Zero","cjdns_snode::pathsearch::numtraits","Helper trait providing zero value for numeric types.",null,null],[18,"ZERO","","",11,null],[8,"IntoOrd","","Helper trait, providing total ordering for non-`Ord`…",null,null],[16,"Output","","Some substitute `Ord` type which can be used instead of…",12,null],[10,"into_ord","","Convert self into `Ord`-supporting type `Self::Output`.",12,[[]]],[0,"peer","cjdns_snode","Connecting to other supernodes",null,null],[3,"Peers","cjdns_snode::peer","",null,null],[12,"peers","","",13,null],[12,"anns","","",13,null],[12,"msg_id_seq","","",13,null],[12,"announce_tx","","",13,null],[5,"create_peers","","",null,[[]]],[0,"ann_list","","Announce list",null,null],[3,"AnnList","cjdns_snode::peer::ann_list","",null,null],[12,"ann_by_hash","","",14,null],[12,"ann_hashes_ordered","","",14,null],[6,"AnnData","","",null,null],[11,"new","","",14,[[]]],[11,"add","","",14,[[["annhash",3],["vec",3]]]],[11,"remove","","",14,[[["annhash",3]]]],[11,"hash_list","","",14,[[],["vec",3]]],[11,"hash_known","","",14,[[["annhash",3]]]],[11,"get","","",14,[[["annhash",3]],[["vec",3],["option",4]]]],[11,"info","","",14,[[]]],[0,"info","cjdns_snode::peer","Info about connections to peer supernodes",null,null],[3,"PeersInfo","cjdns_snode::peer::info","",null,null],[12,"peers","","",15,null],[12,"announcements","","",15,null],[12,"ann_by_hash_len","","",15,null],[3,"PeerInfo","","",null,null],[12,"addr","","",16,null],[12,"outstanding_requests","","",16,null],[12,"msgs_on_wire","","",16,null],[12,"msg_queue","","",16,null],[11,"get_info","cjdns_snode::peer","",13,[[],["peersinfo",3]]],[0,"peer","","Peer supernode connection",null,null],[3,"Peer","cjdns_snode::peer::peer","Peer supernode.",null,null],[12,"id","","",17,null],[12,"addr","","",17,null],[12,"peer_type","","",17,null],[12,"last_msg_time","","",17,null],[12,"outstanding_reqs","","",17,null],[12,"msg_queue","","",17,null],[3,"PeerConnectionClosed","","Error type for the situation when peer connection already…",null,null],[4,"PeerType","","",null,null],[13,"Incoming","","",18,null],[13,"Outgoing","","",18,null],[11,"new","","",17,[[["string",3],["sender",3],["peertype",4],["message",3]]]],[11,"get_outstanding_reqs_count","","",17,[[]]],[11,"send_msg","","",17,[[["message",3]]]],[11,"add_pending_req","","",17,[[]]],[11,"complete_req","","",17,[[]]],[0,"peer_list","cjdns_snode::peer","Peer supernode list",null,null],[3,"PeerList","cjdns_snode::peer::peer_list","",null,null],[12,"peer_id_seq","","",19,null],[12,"peers","","",19,null],[11,"new","","",19,[[]]],[11,"list","","",19,[[["fnmut",8]],["vec",3]]],[11,"create_peer","","",19,[[["string",3],["sender",3],["peertype",4],["message",3]],["peer",3]]],[11,"remove_peer","","",19,[[]]],[11,"get_timed_out_peers","","",19,[[["duration",3]]]],[0,"ping","cjdns_snode::peer","Peer supernode pinging",null,null],[18,"DROP_AFTER","","",13,null],[18,"PING_AFTER","","",13,null],[18,"PING_CYCLE","","",13,null],[11,"ping_task","","",13,[[]]],[11,"do_pings","","",13,[[]]],[18,"VERSION","","",13,null],[11,"new","","Create new instance of Peers + announce sender",13,[[["sender",3],["vec",3]]]],[11,"connect_to","","Asynchronously start connecting to the specified peer…",13,[[["uri",3]]]],[11,"accept_incoming_connection","","",13,[[["string",3]]]],[11,"add_ann","","",13,[[["annhash",3],["vec",3]]]],[11,"del_ann","","",13,[[["annhash",3]]]],[11,"incoming","","Handle incoming WebSocket connection and process it until…",13,[[["string",3]]]],[11,"outgoing","","Handle outgoing WebSocket connection and process it until…",13,[[["string",3]]]],[11,"create_peer","","",13,[[["peertype",4],["string",3]]]],[11,"drop_peer","","",13,[[["peer",3]]]],[11,"run_websocket","","",13,[[["peer",3],["sender",3],["vec",3],["message",3],["receiver",3]]]],[11,"handle_message","","",13,[[["peer",3],["message",3],["sender",3]]]],[0,"server","cjdns_snode","CJDNS supernode implementation.",null,null],[3,"Server","cjdns_snode::server","",null,null],[12,"peers","","",20,null],[12,"nodes","","",20,null],[12,"routing","","",20,null],[12,"mut_state","","",20,null],[3,"ServerMut","","",null,null],[12,"debug_node","","",21,null],[12,"self_node","","",21,null],[12,"current_node","","",21,null],[4,"ReplyError","","",null,null],[13,"None","","",22,null],[13,"FailedParseOrValidate","","",22,null],[13,"OldMessage","","",22,null],[13,"WrongSnode","","",22,null],[13,"ExcessiveClockSkew","","",22,null],[13,"NoEncodingScheme","","",22,null],[13,"NoVersion","","",22,null],[13,"UnknownNode","","",22,null],[5,"main","","Server entry point. Requires config (loaded from an…",null,[[["config",3]]]],[0,"hash","","Announcement hash computation.",null,null],[5,"node_announcement_hash","cjdns_snode::server::hash","",null,[[["option",4],["arc",3]],["annhash",3]]],[0,"link","cjdns_snode::server","Link state.",null,null],[3,"Link","cjdns_snode::server::link","",null,null],[12,"label","","",23,null],[12,"encoding_form_number","","",23,null],[12,"peer_num","","",23,null],[12,"link_state","","",23,null],[12,"create_time","","",23,null],[12,"mut_state","","",23,null],[3,"LinkStateMut","","",null,null],[12,"most_recent_ls_slot","","",24,null],[12,"mtu","","",24,null],[12,"flags","","",24,null],[12,"time","","",24,null],[12,"value","","",24,null],[3,"LinkStateEntry","","",null,null],[12,"drops","","",25,null],[12,"lag","","",25,null],[12,"kb_recv","","",25,null],[5,"mk_link","","",null,[[["peerdata",3],["announcement",3]],["link",3]]],[18,"DECAY_PER_TIMESLOT","","Each timeslot is 10 seconds, link state value halves every…",23,null],[11,"ls_value","","",25,[[]]],[0,"nodes","cjdns_snode::server","IP to node mapping",null,null],[3,"Nodes","cjdns_snode::server::nodes","",null,null],[12,"peers","","",26,null],[12,"nodes_by_ip","","Shared state guarded by a regular sync mutex (since we…",26,null],[3,"Node","","",null,null],[12,"node_type","","",27,null],[12,"version","","",27,null],[12,"key","","",27,null],[12,"ipv6","","",27,null],[12,"encoding_scheme","","",27,null],[12,"inward_links_by_ip","","",27,null],[12,"mut_state","","",27,null],[3,"NodeMut","","",null,null],[12,"timestamp","","",28,null],[12,"announcements","","",28,null],[12,"state_hash","","",28,null],[12,"reset_msg","","",28,null],[4,"NodeType","","",null,null],[13,"Node","","",29,null],[11,"new","","",26,[[["arc",3],["peers",3]]]],[11,"all_ips","","",26,[[],[["cjdns_ip6",3],["vec",3]]]],[11,"by_ip","","",26,[[["cjdns_ip6",3]],[["option",4],["arc",3]]]],[11,"count","","",26,[[]]],[11,"anns_dump","","",26,[[],["vec",3]]],[11,"keep_table_clean","","",26,[[]]],[11,"new_node","","",26,[[["systemtime",3],["cjdns_ip6",3],["option",4],["cjdnspublickey",3],["arc",3],["announcement",3],["option",4]],[["result",4],["error",3],["node",3]]]],[11,"add_node","","",26,[[["node",3]],[["arc",3],["result",4]]]],[11,"forget_node","","",26,[[["arc",3],["node",3]]]],[0,"route","cjdns_snode::server","Route computation",null,null],[3,"Routing","cjdns_snode::server::route","",null,null],[12,"state","","",30,null],[3,"RoutingState","","",null,null],[12,"rebuild_lock","","",31,null],[12,"last_rebuild","","",31,null],[12,"route_cache","","",31,null],[12,"dijkstra","","",31,null],[3,"CacheKey","","",null,null],[12,"0","","",32,null],[12,"1","","",32,null],[3,"Route","","",null,null],[12,"label","","",33,null],[12,"hops","","",33,null],[12,"path","","",33,null],[3,"Hop","","",null,null],[12,"label","","",34,null],[12,"orig_label","","",34,null],[12,"scheme","","",34,null],[12,"inverse_form_num","","",34,null],[4,"RoutingError","","",null,null],[13,"NoInput","","",35,null],[13,"RouteNotFound","","",35,null],[5,"get_route","","",null,[[["server",3],["arc",3],["option",4],["arc",3]],[["result",4],["routingerror",4],["route",3]]]],[5,"get_route_impl","","",null,[[["server",3],["arc",3],["node",3],["arc",3]],[["option",4],["route",3]]]],[5,"build_node_graph","","",null,[[["nodes",3]],[["cjdns_ip6",3],["dijkstra",3]]]],[5,"compute_route","","",null,[[["nodes",3],["arc",3],["routingstate",3],["node",3]],[["option",4],["route",3]]]],[5,"compute_routing_label","","",null,[[["nodes",3]],["option",4]]],[11,"identity","","",33,[[]]],[11,"new","","",30,[[]]],[11,"new","","",31,[[["cjdns_ip6",3],["dijkstra",3]]]],[11,"need_rebuild","","",31,[[]]],[0,"service","cjdns_snode::server","Local node (router) service task",null,null],[5,"service_task","cjdns_snode::server::service","",null,[[["arc",3],["server",3]]]],[5,"do_service","","",null,[[["arc",3],["server",3]]]],[5,"handle_subnode_messages","","",null,[[["arc",3],["sniffer",3],["server",3]]]],[5,"check_connection_alive","","",null,[[["connection",3]]]],[5,"count_handlers","","",null,[[["connection",3]]]],[5,"on_subnode_message","","Handles a message from local node, and returns a response…",null,[[["arc",3],["message",3],["server",3]]]],[5,"on_subnode_message_impl","","",null,[[["server",3],["routeheader",3],["bvalue",3],["arc",3]]]],[0,"core_node_info","","",null,null],[3,"CoreNodeInfoPayload","cjdns_snode::server::service::core_node_info","Return value for `Core_nodeInfo` remote function.",null,null],[12,"my_addr","","",36,null],[12,"encoding_scheme","","",36,null],[3,"EncForm","","",null,null],[12,"prefix_len","","",37,null],[12,"prefix","","",37,null],[12,"bit_count","","",37,null],[5,"try_parse_encoding_scheme","","",null,[[["encform",3],["vec",3]],[["encodingscheme",3],["error",3],["result",4]]]],[0,"utils","cjdns_snode::server","Announcement parsing utils",null,null],[5,"encoding_scheme_from_announcement","cjdns_snode::server::utils","",null,[[["announcement",3]],[["option",4],["encodingscheme",3]]]],[5,"version_from_announcement","","",null,[[["announcement",3]],["option",4]]],[5,"peers_from_announcement","","",null,[[["announcement",3]]]],[5,"link_states_from_announcement","","",null,[[["announcement",3]]]],[5,"ann_id","","",null,[[["announcement",3]]]],[5,"is_entity_ephemeral","","",null,[[["entity",4]]]],[5,"is_entity_replacement","","",null,[[["entity",4]]]],[0,"webserver","cjdns_snode::server","Web server",null,null],[5,"test_srv_task","cjdns_snode::server::webserver","",null,[[["arc",3],["server",3]]]],[5,"api","","",null,[[["arc",3],["server",3]]]],[5,"info_route","","",null,[[["arc",3],["server",3]]]],[5,"debug_node_route","","",null,[[["arc",3],["server",3]]]],[5,"dump_route","","",null,[[["arc",3],["server",3]]]],[5,"path_route","","",null,[[["arc",3],["server",3]]]],[5,"ni_with_ip_route","","",null,[[["arc",3],["server",3]]]],[5,"ni_empty","","",null,[[["arc",3],["server",3]]]],[5,"walk_route","","",null,[[["arc",3],["server",3]]]],[5,"ws_route","","",null,[[["arc",3],["server",3]]]],[5,"with_server","","",null,[[["arc",3],["server",3]]]],[0,"handlers","","",null,null],[4,"WebServerError","cjdns_snode::server::webserver::handlers","",null,null],[13,"BadIP6Address","","",38,null],[5,"handle_info","","",null,[[["arc",3],["server",3]]]],[5,"handle_debug_node","","",null,[[["server",3],["arc",3],["string",3]]]],[5,"handle_dump","","",null,[[["arc",3],["server",3]]]],[5,"handle_path","","",null,[[["server",3],["arc",3],["string",3]]]],[5,"handle_ni_with_ip","","",null,[[["server",3],["arc",3],["string",3]]]],[5,"handle_ni_empty","","",null,[[["arc",3],["server",3]]]],[5,"handle_walk","","",null,[[["arc",3],["server",3]]]],[5,"json_encoding_scheme","","",null,[[["encodingscheme",3]],["jsonvalue",4]]],[5,"json_label","","",null,[[["routinglabel",3],["option",4]],["jsonvalue",4]]],[5,"json_announcement","","",null,[[["announcement",3]],["jsonvalue",4]]],[5,"json_ann_entity","","",null,[[["entity",4]],["jsonvalue",4]]],[5,"json_binary_buffer","","",null,[[],["jsonvalue",4]]],[0,"warp_pretty_print_json_reply","","Copy of `warp::reply::json`, but with pretty json formatter.",null,null],[3,"Json","cjdns_snode::server::webserver::handlers::warp_pretty_print_json_reply","",null,null],[12,"inner","","",39,null],[5,"reply_json","","Copy of warp::reply::json, but with pretty json formatter",null,[[],["json",3]]],[0,"node_info","cjdns_snode::server::webserver","",null,null],[3,"NodesInfo","cjdns_snode::server::webserver::node_info","",null,null],[12,"nodes","","",40,null],[12,"total_ann","","",40,null],[12,"resets","","",40,null],[3,"NodeShortInfo","","",null,null],[12,"ip6","","",41,null],[12,"announcements","","",41,null],[12,"rst","","",41,null],[5,"nodes_info","","",null,[[["nodes",3]],["nodesinfo",3]]],[0,"websock","cjdns_snode::server","Websockets - unification of incoming and outgoing…",null,null],[6,"WsWrite","cjdns_snode::server::websock","",null,null],[6,"WsRead","","",null,null],[8,"WebSock","","",null,null],[10,"ws_split","","",42,[[]]],[0,"debug","cjdns_snode::server","",null,null],[5,"print_entities","cjdns_snode::server::debug","",null,[[],["string",3]]],[5,"print_entity","","",null,[[["entity",4]],["string",3]]],[17,"KEEP_TABLE_CLEAN_CYCLE","cjdns_snode::server","",null,null],[17,"MINUTE","","",null,null],[17,"AGREED_TIMEOUT","","",null,null],[17,"MAX_CLOCKSKEW","","",null,null],[17,"MAX_GLOBAL_CLOCKSKEW","","",null,null],[17,"GLOBAL_TIMEOUT","","",null,null],[11,"new","","",20,[[["arc",3],["peers",3]]]],[11,"handle_announce","","",20,[[["vec",3]]]],[11,"handle_announce_impl","","",20,[[["vec",3],["option",4]]]],[11,"add_announcement","","",20,[[["arc",3],["announcement",3],["node",3]]]],[11,"link_state_update1","","",20,[[["arc",3],["announcement",3],["node",3]]]],[0,"utils","cjdns_snode","",null,null],[0,"node","cjdns_snode::utils","Node name parsing utilities",null,null],[3,"NODE_NAME_RE","cjdns_snode::utils::node","",null,null],[12,"__private_field","","",43,null],[5,"parse_node_name","","Gets version, label and public key all together in tuple…",null,[[],["result",4]]],[0,"rand","cjdns_snode::utils","Random number utils",null,null],[5,"seed","cjdns_snode::utils::rand","",null,[[]]],[0,"seq","cjdns_snode::utils","Thread-safe sequence number generator.",null,null],[3,"Seq","cjdns_snode::utils::seq","Thread-safe sequence number generator.",null,null],[12,"0","","",44,null],[11,"new","","",44,[[]]],[11,"next","","",44,[[]]],[0,"task","cjdns_snode::utils","Task utilities",null,null],[5,"periodic_task","cjdns_snode::utils::task","",null,[[["duration",3],["fnmut",8]]]],[5,"periodic_async_task","","",null,[[["duration",3],["fnmut",8]]]],[0,"timestamp","cjdns_snode::utils","Timestamp utilities",null,null],[5,"mktime","cjdns_snode::utils::timestamp","Convert cjdns timestamp to `SystemTime`",null,[[],["systemtime",3]]],[5,"make_timestamp","","Convert `SystemTime` to cjdns timestamp",null,[[["systemtime",3]]]],[5,"current_timestamp","","Return current system time as cjdns timestamp",null,[[]]],[5,"time_diff","","Compute duration between two timestamps. It does not…",null,[[["systemtime",3]],["duration",3]]],[14,"msg","cjdns_snode","",null,null],[11,"from","cjdns_snode::args","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","cjdns_snode::config","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","cjdns_snode::message","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"as_fail","","",5,[[],["fail",8]]],[11,"from","cjdns_snode::pathsearch::dijkstra","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","cjdns_snode::pathsearch::frontier","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","cjdns_snode::pathsearch::graph","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","cjdns_snode::peer","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","cjdns_snode::peer::ann_list","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","cjdns_snode::peer::info","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","cjdns_snode::peer::peer","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"as_fail","","",45,[[],["fail",8]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","cjdns_snode::peer::peer_list","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","cjdns_snode::server","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","cjdns_snode::server::link","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","cjdns_snode::server::nodes","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","cjdns_snode::server::route","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"as_fail","","",35,[[],["fail",8]]],[11,"from","cjdns_snode::server::service::core_node_info","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"from","cjdns_snode::server::webserver::handlers","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"as_fail","","",38,[[],["fail",8]]],[11,"from","cjdns_snode::server::webserver::handlers::warp_pretty_print_json_reply","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","cjdns_snode::server::webserver::node_info","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","cjdns_snode::utils::node","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","cjdns_snode::utils::seq","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"add_node","cjdns_snode::pathsearch::dijkstra","",6,[[["intoiterator",8]]]],[11,"path","","",6,[[],["vec",3]]],[11,"reverse_path","","",6,[[],["vec",3]]],[11,"path_search_tree","","",6,[[],["pathsearchtree",3]]],[11,"clone","cjdns_snode::config","",1,[[],["config",3]]],[11,"clone","cjdns_snode::message","",2,[[],["message",3]]],[11,"clone","","",3,[[],["messagedata",4]]],[11,"clone","","",4,[[],["encodingerror",4]]],[11,"clone","","",5,[[],["decodingerror",4]]],[11,"clone","cjdns_snode::peer::peer","",17,[[],["peer",3]]],[11,"clone","","",18,[[],["peertype",4]]],[11,"clone","cjdns_snode::server::link","",23,[[],["link",3]]],[11,"clone","","",24,[[],["linkstatemut",3]]],[11,"clone","","",25,[[],["linkstateentry",3]]],[11,"clone","cjdns_snode::server::nodes","",29,[[],["nodetype",4]]],[11,"clone","cjdns_snode::server::route","",32,[[],["cachekey",3]]],[11,"clone","","",33,[[],["route",3]]],[11,"clone","","",34,[[],["hop",3]]],[11,"clone","","",35,[[],["routingerror",4]]],[11,"clone","cjdns_snode::server::service::core_node_info","",36,[[],["corenodeinfopayload",3]]],[11,"clone","","",37,[[],["encform",3]]],[11,"default","cjdns_snode::config","",1,[[],["config",3]]],[11,"default","cjdns_snode::server::service::core_node_info","",36,[[],["corenodeinfopayload",3]]],[11,"default","","",37,[[],["encform",3]]],[11,"eq","cjdns_snode::config","",1,[[["config",3]]]],[11,"ne","","",1,[[["config",3]]]],[11,"eq","cjdns_snode::message","",2,[[["message",3]]]],[11,"ne","","",2,[[["message",3]]]],[11,"eq","","",3,[[["messagedata",4]]]],[11,"ne","","",3,[[["messagedata",4]]]],[11,"eq","","",4,[[["encodingerror",4]]]],[11,"ne","","",4,[[["encodingerror",4]]]],[11,"eq","","",5,[[["decodingerror",4]]]],[11,"ne","","",5,[[["decodingerror",4]]]],[11,"eq","cjdns_snode::peer::peer","",18,[[["peertype",4]]]],[11,"eq","cjdns_snode::server::nodes","",29,[[["nodetype",4]]]],[11,"eq","","",27,[[]]],[11,"eq","cjdns_snode::server::route","",32,[[["cachekey",3]]]],[11,"ne","","",32,[[["cachekey",3]]]],[11,"eq","","",35,[[["routingerror",4]]]],[11,"ne","","",35,[[["routingerror",4]]]],[11,"eq","cjdns_snode::server::service::core_node_info","",36,[[["corenodeinfopayload",3]]]],[11,"ne","","",36,[[["corenodeinfopayload",3]]]],[11,"eq","","",37,[[["encform",3]]]],[11,"ne","","",37,[[["encform",3]]]],[11,"deref","cjdns_snode::utils::node","",43,[[],["regex",3]]],[11,"fmt","cjdns_snode::config","",1,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::message","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::peer::peer","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::link","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::nodes","",29,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::route","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::service::core_node_info","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::webserver::handlers","",38,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server","",22,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::message","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::peer::peer","",45,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::route","",35,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server::webserver::handlers","",38,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_snode::server","",22,[[["formatter",3]],["result",6]]],[11,"hash","cjdns_snode::server::route","",32,[[]]],[11,"initialize","cjdns_snode::utils::node","",43,[[]]],[11,"into_app","cjdns_snode::args","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"deserialize","cjdns_snode::config","",1,[[],["result",4]]],[11,"deserialize","cjdns_snode::server::service::core_node_info","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"into_response","cjdns_snode::server::webserver::handlers::warp_pretty_print_json_reply","",39,[[],["response",6]]],[11,"info","cjdns_snode::peer::peer_list","",19,[[],[["vec",3],["peerinfo",3]]]],[11,"info","cjdns_snode::peer::peer","",17,[[],["peerinfo",3]]]],"p":[[3,"Opts"],[3,"Config"],[3,"Message"],[4,"MessageData"],[4,"EncodingError"],[4,"DecodingError"],[3,"Dijkstra"],[3,"Frontier"],[3,"PathSearchTree"],[8,"GraphBuilder"],[8,"GraphSolver"],[8,"Zero"],[8,"IntoOrd"],[3,"Peers"],[3,"AnnList"],[3,"PeersInfo"],[3,"PeerInfo"],[3,"Peer"],[4,"PeerType"],[3,"PeerList"],[3,"Server"],[3,"ServerMut"],[4,"ReplyError"],[3,"Link"],[3,"LinkStateMut"],[3,"LinkStateEntry"],[3,"Nodes"],[3,"Node"],[3,"NodeMut"],[4,"NodeType"],[3,"Routing"],[3,"RoutingState"],[3,"CacheKey"],[3,"Route"],[3,"Hop"],[4,"RoutingError"],[3,"CoreNodeInfoPayload"],[3,"EncForm"],[4,"WebServerError"],[3,"Json"],[3,"NodesInfo"],[3,"NodeShortInfo"],[8,"WebSock"],[3,"NODE_NAME_RE"],[3,"Seq"],[3,"PeerConnectionClosed"]]},\
"cjdnsadmin":{"doc":"CJDNS Admin tool","i":[[5,"main","cjdnsadmin","",null,[[]]],[5,"run","","",null,[[]]],[5,"split_fn_invocation_str","","",null,[[],["result",4]]],[5,"parse_remote_fn_args","","",null,[[],[["result",4],["vec",3]]]],[5,"make_args","","",null,[[["vec",3],["func",3],["argvalue",4]],["argvalues",3]]]],"p":[]},\
"dumpctrl":{"doc":"Tool to sniff CTRL messages.","i":[[5,"main","dumpctrl","",null,[[]]],[5,"run","","",null,[[]]],[5,"receive_loop","","",null,[[["sniffer",3]]]],[5,"dump_msg","","",null,[[["message",3]],[["error",3],["result",4]]]],[5,"msg_type_str","","",null,[[["ctrlmessagetype",4]]]],[5,"err_type_str","","",null,[[["errormessagetype",4]]]],[5,"dump_error","","",null,[[["vec",3],["parseerror",4]]]]],"p":[]},\
"dumpdht":{"doc":"Tool to sniff CJDHT messages.","i":[[5,"main","dumpdht","",null,[[]]],[5,"run","","",null,[[]]],[5,"receive_loop","","",null,[[["sniffer",3]]]],[5,"dump_msg","","",null,[[["message",3]],[["error",3],["result",4]]]],[5,"dump_bencode","","",null,[[["vec",3],["bvalue",3]],["result",4]]],[5,"dump_error","","",null,[[["vec",3],["parseerror",4]]]]],"p":[]},\
"netchecksum":{"doc":"The 1s complement checksum used by TCP, UDP and ICMP.","i":[[5,"cksum_raw","netchecksum","",null,[[]]],[5,"cksum_udp4","","",null,[[],["result",4]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);