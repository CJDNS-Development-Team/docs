var searchIndex = JSON.parse('{\
"cjdns_admin":{"doc":"CJDNS Admin lib","i":[[3,"Opts","cjdns_admin","Connection options. Can be loaded from a config file.",null,null],[12,"addr","","Remote IP address (either IPv4 or IPv6).",0,null],[12,"port","","Remote UDP port.",0,null],[12,"password","","Password for authentication. If `None`, default \\\"NONE\\\"…",0,null],[12,"config_file_path","","Optional path to config file (`~/.cjdnsadmin` used by…",0,null],[12,"anon","","Anonymous connection - do not use password.",0,null],[3,"Connection","","Admin connection to the CJDNS node.",null,null],[12,"functions","","List of available remote functions.",1,null],[3,"ArgValues","","Remote function argument values.",null,null],[3,"Arg","","Remote function argument description.",null,null],[12,"name","","Argument name.",2,null],[12,"required","","Required argument flag.",2,null],[12,"typ","","Argument type.",2,null],[3,"Args","","Remote function arguments description.",null,null],[3,"Func","","Remote function description.",null,null],[12,"name","","Function name.",3,null],[12,"args","","Function argument descriptions.",3,null],[3,"Funcs","","List of available remote functions.",null,null],[4,"Error","","Error type for all cjdns admin operations.",null,null],[13,"ConnectError","","Connection error - check the remote IP address and port.",4,null],[13,"AuthError","","Authentication error - check the password.",4,null],[13,"ConfigFileRead","","Failed to read cjdnsadmin config file (`~/.cjdnsadmin` by…",4,null],[13,"BadConfigFile","","Error parsing cjdnsadmin config file (`~/.cjdnsadmin` by…",4,null],[13,"BadNetworkAddress","","Failed to parse IPv4/IPv6 address.",4,null],[13,"NetworkOperation","","Network I/O error.",4,null],[13,"Protocol","","Failed to serialize/deserialize protocol message (using…",4,null],[13,"RemoteError","","Remote invocation failed and returned `error` message.",4,null],[13,"BrokenTx","","Unexpected transaction id during message exchange.…",4,null],[12,"sent_txid","cjdns_admin::Error","",5,null],[12,"received_txid","","",5,null],[13,"TimeOut","cjdns_admin","Network timeout error.",4,null],[4,"ArgValue","","Argument value (either integer or string).",null,null],[13,"Int","","Integer argument value.",6,null],[13,"String","","String argument value.",6,null],[4,"ArgType","","Remote function argument type.",null,null],[13,"Int","","Integer argument.",7,null],[13,"String","","String argument.",7,null],[13,"Other","","Some other type which is not supported directly.",7,null],[4,"ReturnValue","","Remote function return value. Supports json-like data types.",null,null],[13,"Int","","Integer return value.",8,null],[13,"String","","String return value.",8,null],[13,"List","","List return value.",8,null],[13,"Map","","Map return value.",8,null],[5,"connect","","Connect to the running cjdns router instance. If `opts` is…",null,[[["option",4],["opts",3]]]],[11,"invoke","","Call remote function on CJDNS router.",1,[[["args",8]]]],[11,"new","","New empty instance.",9,[[]]],[11,"add","","Add argument value to list.",9,[[["into",8],["into",8],["argvalue",4],["argname",6]]]],[11,"iter","","Iterator over functions in this list returned in…",10,[[]]],[11,"find","","Find function by name.",10,[[],[["option",4],["func",3]]]],[11,"iter","","Iterator over arguments in this list. Returns required…",11,[[]]],[11,"as_int","","Access stored Int value.",8,[[],["result",4]]],[11,"as_str","","Access stored String value.",8,[[],["result",4]]],[11,"as_list","","Access stored List value, converting each list element.…",8,[[],[["vec",3],["result",4]]]],[11,"as_map","","Access stored Map value, converting each entry value…",8,[[],[["btreemap",3],["result",4]]]],[11,"as_int_list","","Access stored List value. Returns a new `Vec` where each…",8,[[],[["vec",3],["result",4]]]],[11,"as_int_map","","Access stored Map<String, Int> value. Returns a new…",8,[[],[["btreemap",3],["result",4]]]],[0,"msgs","","RPC messages.",null,null],[3,"Empty","cjdns_admin::msgs","Empty payload or arguments.",null,null],[6,"GenericResponsePayload","","Generic return value with fields exposed as a map.",null,null],[8,"Args","","Trait for RPC query arguments. Can be any serializable type.",null,null],[8,"Payload","","Trait for RPC query return value. Can be any…",null,null],[6,"ArgName","cjdns_admin","Argument name (alias to `String`).",null,null],[14,"cjdns_invoke","","Helper macro to easily invoke remote function with…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","cjdns_admin::msgs","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","cjdns_admin","",6,[[]]],[11,"from","","",6,[[["string",3]]]],[11,"from","","",6,[[]]],[11,"from","","",7,[[["string",3]]]],[11,"clone","","",0,[[],["opts",3]]],[11,"clone","","",6,[[],["argvalue",4]]],[11,"clone","","",9,[[],["argvalues",3]]],[11,"clone","","",10,[[],["funcs",3]]],[11,"clone","","",3,[[],["func",3]]],[11,"clone","","",11,[[],["args",3]]],[11,"clone","","",2,[[],["arg",3]]],[11,"clone","","",7,[[],["argtype",4]]],[11,"clone","","",8,[[],["returnvalue",4]]],[11,"clone","cjdns_admin::msgs","",12,[[],["empty",3]]],[11,"default","cjdns_admin","",0,[[],["opts",3]]],[11,"default","","",9,[[],["argvalues",3]]],[11,"default","","",10,[[],["funcs",3]]],[11,"default","cjdns_admin::msgs","",12,[[],["empty",3]]],[11,"eq","cjdns_admin","",0,[[["opts",3]]]],[11,"ne","","",0,[[["opts",3]]]],[11,"eq","","",6,[[["argvalue",4]]]],[11,"ne","","",6,[[["argvalue",4]]]],[11,"eq","","",9,[[["argvalues",3]]]],[11,"ne","","",9,[[["argvalues",3]]]],[11,"eq","","",10,[[["funcs",3]]]],[11,"ne","","",10,[[["funcs",3]]]],[11,"eq","","",3,[[["func",3]]]],[11,"ne","","",3,[[["func",3]]]],[11,"eq","","",11,[[["args",3]]]],[11,"ne","","",11,[[["args",3]]]],[11,"eq","","",2,[[["arg",3]]]],[11,"ne","","",2,[[["arg",3]]]],[11,"eq","","",7,[[["argtype",4]]]],[11,"ne","","",7,[[["argtype",4]]]],[11,"eq","","",8,[[["returnvalue",4]]]],[11,"ne","","",8,[[["returnvalue",4]]]],[11,"eq","cjdns_admin::msgs","",12,[[["empty",3]]]],[11,"fmt","cjdns_admin","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_admin::msgs","",12,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_admin","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"serialize","","",9,[[["serializer",8]],["result",4]]],[11,"serialize","cjdns_admin::msgs","",12,[[],["result",4]]],[11,"deserialize","cjdns_admin","",0,[[],["result",4]]],[11,"deserialize","","",8,[[["deserializer",8]],["result",4]]],[11,"deserialize","cjdns_admin::msgs","",12,[[],["result",4]]]],"p":[[3,"Opts"],[3,"Connection"],[3,"Arg"],[3,"Func"],[4,"Error"],[13,"BrokenTx"],[4,"ArgValue"],[4,"ArgType"],[4,"ReturnValue"],[3,"ArgValues"],[3,"Funcs"],[3,"Args"],[3,"Empty"]]},\
"cjdns_ann":{"doc":"Library for parsing cjdns route announcement messages.","i":[[3,"Announcement","cjdns_ann","Deserialized cjdns route announcement message.",null,null],[12,"header","","",0,null],[12,"entities","","",0,null],[12,"node_pub_key","","",0,null],[12,"node_ip","","",0,null],[12,"binary","","",0,null],[12,"hash","","",0,null],[3,"AnnouncementHeader","","Deserialized announcement message header.",null,null],[12,"signature","","",1,null],[12,"pub_signing_key","","",1,null],[12,"snode_ip","","",1,null],[12,"version","","",1,null],[12,"is_reset","","",1,null],[12,"timestamp","","",1,null],[3,"AnnouncementPacket","","Serialized announcement message. A thin wrapper over…",null,null],[4,"Entity","","Announcement message entity types.",null,null],[13,"NodeProtocolVersion","","The packet diagram for version entity looks as follows:…",2,null],[13,"Peer","","The packet diagram for peer entity looks as follows: `md 1…",2,null],[12,"ip6","cjdns_ann::Entity","",3,null],[12,"label","","",3,null],[12,"mtu","","",3,null],[12,"peer_num","","",3,null],[12,"unused","","",3,null],[12,"encoding_form_number","","",3,null],[12,"flags","","",3,null],[13,"EncodingScheme","cjdns_ann","As `EncodingScheme` serialization does not have a fixed…",2,null],[12,"hex","cjdns_ann::Entity","",4,null],[12,"scheme","","",4,null],[13,"LinkState","cjdns_ann","`LinkState` stores data, which is used by route…",2,null],[12,"node_id","cjdns_ann::Entity","",5,null],[12,"slots_start_idx","","",5,null],[12,"lag_slots","","",5,null],[12,"drop_slots","","",5,null],[12,"kb_recv_slots","","",5,null],[11,"try_new","cjdns_ann","Wrap raw announcement message bytes.",6,[[["vec",3]],[["packeterror",4],["result",4]]]],[11,"check","","Checks announcement message digital signature validity.…",6,[[],[["packeterror",4],["result",4]]]],[11,"parse","","Parses announcement packet and creates deserialized…",6,[[],[["announcement",3],["packeterror",4],["result",4]]]],[6,"AnnouncementEntities","","A sequence of entities in the announcement message.",null,null],[6,"LinkStateSlots","","An array of slots, storing network link samples.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["announcement",3]]],[11,"clone","","",1,[[],["announcementheader",3]]],[11,"clone","","",2,[[],["entity",4]]],[11,"clone","","",6,[[],["announcementpacket",3]]],[11,"eq","","",0,[[["announcement",3]]]],[11,"ne","","",0,[[["announcement",3]]]],[11,"eq","","",1,[[["announcementheader",3]]]],[11,"ne","","",1,[[["announcementheader",3]]]],[11,"eq","","",2,[[["entity",4]]]],[11,"ne","","",2,[[["entity",4]]]],[11,"eq","","",6,[[["announcementpacket",3]]]],[11,"ne","","",6,[[["announcementpacket",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]]],"p":[[3,"Announcement"],[3,"AnnouncementHeader"],[4,"Entity"],[13,"Peer"],[13,"EncodingScheme"],[13,"LinkState"],[3,"AnnouncementPacket"]]},\
"cjdns_bencode":{"doc":"CJDNS Bencode library.","i":[[4,"Error","cjdns_bencode","An enumeration of potential errors that appear during…",null,null],[13,"ArbitraryMapKeysUnsupported","","Error that occurs if a map with a key type which does not…",0,null],[13,"MapSerializationCallOrder","","Error that occurs if methods on MapSerializer are called…",0,null],[13,"InvalidBool","","Error that occurs if a bool is deserialized from an…",0,null],[13,"InvalidF32","","Error that occurs if an f32 is deserialized from an string…",0,null],[13,"InvalidF64","","Error that occurs if an f64 is deserialized from an string…",0,null],[13,"InvalidChar","","Error that occurs if a char is deserialized from a string…",0,null],[13,"TrailingBytes","","Error that occurs if trailing bytes remain after…",0,null],[13,"CustomEncode","","Error that occurs if a serde-related error occurs during…",0,null],[13,"CustomDecode","","Error that occurs if a serde-related error occurs during…",0,null],[13,"Encode","","Error that occurs if a problem is encountered during…",0,null],[13,"Decode","","Error that occurs if a problem is encountered during…",0,null],[5,"from_bytes","","Deserialize an instance of `T` from bencode",null,[[],[["result",4],["error",4]]]],[5,"to_bytes","","Serialize an instance of `T` to bencode",null,[[],[["vec",3],["error",4],["result",4]]]],[3,"BencodeError","","",null,null],[12,"0","","",1,null],[3,"BValue","","Generic Bencode value.",null,null],[11,"decode","","Create `BValue` from bencoded data bytes.",2,[[],[["result",4],["bdecodeerror",3]]]],[11,"encode","","Encode this `BValue` as bencoded data bytes.",2,[[],[["result",4],["bencodeerror",3],["vec",3]]]],[11,"as_int","","Access stored Integer value.",2,[[],["result",4]]],[11,"as_string","","Access stored bytes value as UTF-8 string.",2,[[],[["result",4],["string",3]]]],[11,"as_bytes","","Access stored bytes value.",2,[[],[["result",4],["vec",3]]]],[11,"get_dict_value","","Access stored Dict value by key and return the data under…",2,[[],[["option",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"as_fail","","",1,[[],["fail",8]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[["parseinterror",3]],["error",4]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",1,[[["errorkind",4]],["error",3]]],[11,"from","","",1,[[["structureerror",4]],["error",3]]],[11,"from","","",0,[[["error",3]],["error",4]]],[11,"from","","",0,[[["utf8error",3]],["error",4]]],[11,"custom","","",0,[[],["error",4]]],[11,"clone","","",1,[[],["error",3]]],[11,"name","","",1,[[],["option",4]]],[11,"cause","","",1,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",1,[[],[["option",4],["backtrace",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"custom","","",0,[[],["error",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",2,[[],["bvalue",3]]],[11,"eq","","",2,[[["bvalue",3]]]],[11,"ne","","",2,[[["bvalue",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"malformed_content","","Raised when there is a general error while deserializing a…",1,[[],["error",3]]]],"p":[[4,"Error"],[3,"BencodeError"],[3,"BValue"]]},\
"cjdns_bytes":{"doc":"Utilities for parsing and serializing of messages","i":[[3,"Reader","cjdns_bytes","Buffer reader",null,null],[3,"Writer","","Buffer writer. Wrapper over `Vec<u8`.",null,null],[4,"ParseError","","Errors returned when parsing message or its parts (for…",null,null],[13,"InvalidPacketSize","","Data with wrong size received to parser",0,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",0,null],[13,"InvalidData","","Received unusable data. Description message can be provided.",0,null],[13,"InvalidChecksum","","Checksum match failed. Matching checksum values can be…",0,null],[4,"SerializeError","","Errors returned when serializing message or its parts (for…",null,null],[13,"UnrecognizedData","","Trying to serialize data with values unintended to be…",1,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",1,null],[13,"InvalidData","","Trying to serialize unusable data. Description message can…",1,null],[4,"ExpectedSize","","Expected by user size of buffer.",null,null],[13,"Exact","","`Reader` must have exact size, equal to associated value",2,null],[13,"NotLessThan","","`Reader` length must be not less than associated value",2,null],[11,"new","","Instantiates `Reader`.",3,[[]]],[11,"read","","Reads bytes in accordance to logic implemented in `job`.",3,[[["expectedsize",4],["fnonce",8]],[["result",4],["readerror",3]]]],[11,"read_u8","","Reads u8",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"read_u16_be","","Reads big endian u16",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"read_u32_be","","Reads big endian u32",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"read_u64_be","","Reads big endian u64",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"read_array_32","","Reads `[u8; 32]` array.",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"peek_remainder","","Peeks remainder without mutating readers state",3,[[]]],[11,"read_remainder","","Returns remainder mutating readers state.",3,[[]]],[11,"skip","","Skips `count` amount of data.",3,[[],[["insufficientbuffer",3],["result",4]]]],[11,"read_slice","","Reads `count` values.",3,[[],[["result",4],["insufficientbuffer",3]]]],[11,"is_empty","","",3,[[]]],[11,"with_capacity","","Instantiates writer with provided `capacity`.",4,[[]]],[11,"into_vec","","Converts `Writer` into `Vec<u8>`.",4,[[],["vec",3]]],[11,"write_u8","","Writes u8 to buffer.",4,[[]]],[11,"write_u16_be","","Writes big endian u16 to buffer.",4,[[]]],[11,"write_u32_be","","Writes big endian u32 to buffer.",4,[[]]],[11,"write_u64_be","","Writes big endian 64 to buffer.",4,[[]]],[11,"write_slice","","Writes slice to buffer.",4,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"clone","","",1,[[],["serializeerror",4]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"eq","","",1,[[["serializeerror",4]]]],[11,"ne","","",1,[[["serializeerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"ParseError"],[4,"SerializeError"],[4,"ExpectedSize"],[3,"Reader"],[3,"Writer"]]},\
"cjdns_core":{"doc":"Entities operated by CJDNS.","i":[[3,"EncodingScheme","cjdns_core","Encoding scheme - an iterable list of scheme forms.",null,null],[3,"EncodingSchemeForm","","A form of an encoding scheme. Form is used as follows to…",null,null],[3,"PathHop","","",null,null],[12,"label_p","","",0,null],[12,"label_n","","",0,null],[12,"encoding_scheme","","",0,null],[3,"RoutingLabel","","Routing label (a sequence of encoded Directors).",null,null],[4,"SchemeValidationError","","Error returned when scheme validation fails",null,null],[13,"InvalidFormsAmount","","Invalid scheme forms length. Should be in 1..32 range.",1,null],[13,"SingleFormWithPrefix","","Scheme with single form must not have non-empty prefix value",1,null],[13,"MultiFormBadPrefix","","Scheme with multiple forms must have non-empty prefix value",1,null],[13,"BitCountNotSorted","","Multiple forms should have `bit_count` in ascending order",1,null],[13,"DuplicatePrefix","","Multiple forms must have unique prefixes",1,null],[13,"TooBigForm","","Encoding scheme cannot be represented in the usable space…",1,null],[4,"EncodingSerializationError","","Error returned when encoding scheme for…",null,null],[13,"BadSerializedData","","Returned when scheme serialization fails",2,null],[13,"BadEncodingForm","","Returned when encoding form deserialization fails",2,null],[4,"LabelError","","",null,null],[13,"MalformedRoutingLabelStringValue","","",3,null],[13,"ZeroRoutingLabel","","",3,null],[5,"deserialize_scheme","","Parse byte vector array (bits sequence) and transform it…",null,[[],[["encodingserializationerror",4],["result",4],["encodingscheme",3]]]],[5,"serialize_scheme","","Store encoding scheme into a byte vector array (bits…",null,[[["encodingscheme",3]],[["result",4],["encodingserializationerror",4],["vec",3]]]],[0,"schemes","","Well-known encoding schemes",null,null],[3,"F4","cjdns_core::schemes","Fixed-length 4 bit scheme.",null,null],[3,"F8","","Fixed-length 8 bit scheme.",null,null],[3,"V48","","Variable-length 4 or 8 bit scheme.",null,null],[3,"V358","","Special case scheme. An encoding scheme consisting of 3, 5…",null,null],[3,"V37","","Variable-length 3 or 7 bit scheme.",null,null],[5,"all","","Returns an iterator over all the well-known encoding schemes",null,[[]]],[0,"schemes","cjdns_core","Well-known encoding schemes",null,null],[3,"F4","cjdns_core::schemes","Fixed-length 4 bit scheme.",null,null],[3,"F8","","Fixed-length 8 bit scheme.",null,null],[3,"V48","","Variable-length 4 or 8 bit scheme.",null,null],[3,"V358","","Special case scheme. An encoding scheme consisting of 3, 5…",null,null],[3,"V37","","Variable-length 3 or 7 bit scheme.",null,null],[5,"all","","Returns an iterator over all the well-known encoding schemes",null,[[]]],[11,"try_new","cjdns_core","Instantiates `EncodingSchemeForm`.",4,[[],[["result",4],["formvalidationerror",4]]]],[11,"params","","Returns encoding scheme form params in respected order: *…",4,[[]]],[11,"size_bits","","As a scheme is represented as an array of forms, this…",4,[[]]],[11,"try_new","","Instantiates `EncodingScheme`.",5,[[],[["result",4],["schemevalidationerror",4]]]],[11,"validate","","Validates encoding scheme.",5,[[],[["schemevalidationerror",4],["result",4]]]],[11,"new","","",0,[[["routinglabel",3],["option",4],["encodingscheme",3]]]],[11,"try_new","","Create new non-zero routing label. Returns `None` if…",6,[[],["option",4]]],[11,"bits","","Raw data of this routing label. Always non-zero.",6,[[]]],[0,"splice","","Routing label splice/unsplice routines.",null,null],[4,"SpliceError","cjdns_core::splice","Error type.",null,null],[13,"LabelTooLong","","",7,null],[13,"NotEnoughArguments","","",7,null],[13,"BadArgument","","",7,null],[13,"CannotUnsplice","","",7,null],[13,"CannotFindForm","","",7,null],[13,"CannotReencode","","",7,null],[5,"splice","","This function takes one or more `RoutingLabel`s and…",null,[[],[["result",6],["routinglabel",3]]]],[5,"get_encoding_form","","Get the encoding form used for the first director of the…",null,[[["encodingscheme",3],["routinglabel",3],["labelbits",8]],["result",6]]],[5,"re_encode","","Re-encode a `label` to the encoding form specified by…",null,[[["routinglabel",3],["encodingscheme",3],["labelbits",8],["option",4]],[["result",6],["routinglabel",3]]]],[5,"is_one_hop","","Tests if a `label` contains only one hop.",null,[[["encodingscheme",3],["routinglabel",3],["labelbits",8]],["result",6]]],[5,"build_label","","This will construct a label using an array representation…",null,[[],["result",6]]],[5,"routes_through","","This will return `true` if the node at the end of the…",null,[[["routinglabel",3],["labelbits",8]]]],[5,"unsplice","","Convert a full path to a representation which a node along…",null,[[["routinglabel",3],["labelbits",8]],[["result",6],["routinglabel",3]]]],[6,"Result","","Result type alias.",null,null],[6,"DefaultRoutingLabel","cjdns_core","A 64 bit routing label.",null,null],[8,"LabelBits","","Describes types which can act as routing label\'s…",null,null],[18,"ZERO","","Zero value for this data type.",8,null],[18,"ONE","","One (1) value for this data type.",8,null],[18,"BIT_SIZE","","Bit size of the this data type.",8,null],[18,"MAX_PAYLOAD_BITS","","Maximum number of bits a label payload can occupy.",8,null],[10,"highest_set_bit","","Index of highest set bit in binary representation.",8,[[],["option",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","cjdns_core::schemes","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","cjdns_core::splice","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","cjdns_core","",5,[[],["encodingscheme",3]]],[11,"clone","","",4,[[],["encodingschemeform",3]]],[11,"clone","","",6,[[],["routinglabel",3]]],[11,"clone","","",3,[[],["labelerror",4]]],[11,"cmp","","",4,[[["encodingschemeform",3]],["ordering",4]]],[11,"eq","","",5,[[["encodingscheme",3]]]],[11,"ne","","",5,[[["encodingscheme",3]]]],[11,"eq","","",4,[[["encodingschemeform",3]]]],[11,"ne","","",4,[[["encodingschemeform",3]]]],[11,"eq","","",1,[[["schemevalidationerror",4]]]],[11,"eq","","",2,[[["encodingserializationerror",4]]]],[11,"eq","","",0,[[["pathhop",3]]]],[11,"ne","","",0,[[["pathhop",3]]]],[11,"eq","","",6,[[["routinglabel",3]]]],[11,"ne","","",6,[[["routinglabel",3]]]],[11,"eq","","",3,[[["labelerror",4]]]],[11,"eq","cjdns_core::splice","",7,[[["spliceerror",4]]]],[11,"partial_cmp","cjdns_core","",4,[[["encodingschemeform",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["encodingschemeform",3]]]],[11,"le","","",4,[[["encodingschemeform",3]]]],[11,"gt","","",4,[[["encodingschemeform",3]]]],[11,"ge","","",4,[[["encodingschemeform",3]]]],[11,"deref","","",5,[[]]],[11,"deref","cjdns_core::schemes","",9,[[],["encodingscheme",3]]],[11,"deref","","",10,[[],["encodingscheme",3]]],[11,"deref","","",11,[[],["encodingscheme",3]]],[11,"deref","","",12,[[],["encodingscheme",3]]],[11,"deref","","",13,[[],["encodingscheme",3]]],[11,"fmt","cjdns_core","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core::splice","",7,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","cjdns_core::splice","",7,[[["formatter",3]],["result",6]]],[11,"try_from","cjdns_core","",6,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"initialize","cjdns_core::schemes","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"initialize","","",13,[[]]],[18,"ZERO","cjdns_core","Zero value for this data type.",8,null],[18,"ONE","","One (1) value for this data type.",8,null],[18,"BIT_SIZE","","Bit size of the this data type.",8,null],[18,"MAX_PAYLOAD_BITS","","Maximum number of bits a label payload can occupy.",8,null]],"p":[[3,"PathHop"],[4,"SchemeValidationError"],[4,"EncodingSerializationError"],[4,"LabelError"],[3,"EncodingSchemeForm"],[3,"EncodingScheme"],[3,"RoutingLabel"],[4,"SpliceError"],[8,"LabelBits"],[3,"F4"],[3,"F8"],[3,"V48"],[3,"V358"],[3,"V37"]]},\
"cjdns_ctrl":{"doc":"Parsing/serializing CTRL messages","i":[[3,"CtrlMessage","cjdns_ctrl","Serialized control message",null,null],[12,"msg_type","","",0,null],[12,"msg_data","","",0,null],[3,"ErrorData","","Body data for error type messages",null,null],[12,"err_type","","",1,null],[12,"switch_header","","",1,null],[12,"additional","","",1,null],[3,"PingData","","Body data for ping type control messages",null,null],[12,"version","","",2,null],[12,"key","","",2,null],[12,"content","","",2,null],[4,"CtrlMessageData","","Control message serialized body data",null,null],[13,"PingData","","",3,null],[13,"ErrorData","","",3,null],[13,"SuperNodeQueryData","","",3,null],[4,"CtrlMessageType","","Control message type, which is considered as message header",null,null],[13,"Error","","",4,null],[13,"Ping","","",4,null],[13,"Pong","","",4,null],[13,"KeyPing","","",4,null],[13,"KeyPong","","",4,null],[13,"GetSuperNodeQuery","","",4,null],[13,"GetSuperNodeResponse","","",4,null],[4,"ErrorMessageType","","Concrete types of error for control error message",null,null],[13,"None","","No error, everything is ok.",5,null],[13,"MalformedAddress","","The switch label was malformed.",5,null],[13,"Flood","","Packet dropped because link is congested.",5,null],[13,"LinkLimitExceeded","","Packet dropped because node has oversent its limit.",5,null],[13,"OversizeMessage","","Message too big to send.",5,null],[13,"UndersizedMessage","","Message smaller than expected headers.",5,null],[13,"Authentication","","Authentication failed.",5,null],[13,"Invalid","","Header is invalid or checksum failed.",5,null],[13,"Undeliverable","","Message could not be sent to its destination through no…",5,null],[13,"LoopRoute","","The route enters and leaves through the same interface in…",5,null],[13,"ReturnPathInvalid","","The switch is unable to represent the return path.",5,null],[13,"Unrecognized","","",5,null],[18,"HEADER_SIZE","","Control message header size, which is considered as…",0,null],[11,"parse","","Parses raw bytes into `CtrlMessage`.",0,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `CtrlMessage` instance.",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"get_error_data","","",0,[[],[["option",4],["errordata",3]]]],[11,"get_ping_data","","",0,[[],[["option",4],["pingdata",3]]]],[18,"MIN_SIZE","","`ErrorData` minimum size. First 4 bytes are reserved for…",1,null],[11,"parse","","Parses raw bytes into `ErrorData`",1,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `ErrorData` instance.",1,[[],[["serializeerror",4],["result",4],["vec",3]]]],[18,"MIN_SIZE","","Minimum ping data size",2,null],[11,"parse","","Parses raw bytes into `PingData`.",2,[[["ctrlmessagetype",4]],[["result",4],["parseerror",4]]]],[11,"serialize","","Serialized `PingData` instance.",2,[[["ctrlmessagetype",4]],[["serializeerror",4],["result",4],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"clone","","",0,[[],["ctrlmessage",3]]],[11,"clone","","",4,[[],["ctrlmessagetype",4]]],[11,"clone","","",3,[[],["ctrlmessagedata",4]]],[11,"clone","","",1,[[],["errordata",3]]],[11,"clone","","",5,[[],["errormessagetype",4]]],[11,"clone","","",2,[[],["pingdata",3]]],[11,"eq","","",0,[[["ctrlmessage",3]]]],[11,"ne","","",0,[[["ctrlmessage",3]]]],[11,"eq","","",4,[[["ctrlmessagetype",4]]]],[11,"eq","","",3,[[["ctrlmessagedata",4]]]],[11,"ne","","",3,[[["ctrlmessagedata",4]]]],[11,"eq","","",1,[[["errordata",3]]]],[11,"ne","","",1,[[["errordata",3]]]],[11,"eq","","",5,[[["errormessagetype",4]]]],[11,"eq","","",2,[[["pingdata",3]]]],[11,"ne","","",2,[[["pingdata",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"try_from","","",4,[[],[["result",4],["tryfromprimitiveerror",3]]]],[11,"from_primitive","","",5,[[]]],[11,"try_from_primitive","","",4,[[],[["result",4],["tryfromprimitiveerror",3]]]],[11,"try_from_primitive","","",5,[[],[["result",4],["tryfromprimitiveerror",3]]]]],"p":[[3,"CtrlMessage"],[3,"ErrorData"],[3,"PingData"],[4,"CtrlMessageData"],[4,"CtrlMessageType"],[4,"ErrorMessageType"]]},\
"cjdns_hdr":{"doc":"Library for parsing and serializing cjdns route and data…","i":[[4,"ParseError","cjdns_hdr","Errors returned when parsing message or its parts (for…",null,null],[13,"InvalidPacketSize","","Data with wrong size received to parser",0,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",0,null],[13,"InvalidData","","Received unusable data. Description message can be provided.",0,null],[13,"InvalidChecksum","","Checksum match failed. Matching checksum values can be…",0,null],[4,"SerializeError","","Errors returned when serializing message or its parts (for…",null,null],[13,"UnrecognizedData","","Trying to serialize data with values unintended to be…",1,null],[13,"InvalidInvariant","","Message (or its parts) invariants are not met. Description…",1,null],[13,"InvalidData","","Trying to serialize unusable data. Description message can…",1,null],[3,"DataHeader","","Deserialized data header struct.",null,null],[12,"version","","",2,null],[12,"content_type","","",2,null],[3,"RouteHeader","","Deserialized route header struct.",null,null],[12,"public_key","","",3,null],[12,"ip6","","",3,null],[12,"version","","",3,null],[12,"switch_header","","",3,null],[12,"is_incoming","","",3,null],[12,"is_ctrl","","",3,null],[3,"SwitchHeader","","Deserialized switch header struct.",null,null],[12,"label","","",4,null],[12,"congestion","","",4,null],[12,"suppress_errors","","",4,null],[12,"version","","",4,null],[12,"label_shift","","",4,null],[12,"penalty","","",4,null],[4,"ContentType","","Header content types.",null,null],[13,"Ip6Hop","","",5,null],[13,"Ip6Icmp","","",5,null],[13,"Ip6Igmp","","",5,null],[13,"Ip6Ipv4","","",5,null],[13,"Ip6Tcp","","",5,null],[13,"Ip6Egp","","",5,null],[13,"Ip6Pup","","",5,null],[13,"Ip6Udp","","",5,null],[13,"Ip6Idp","","",5,null],[13,"Ip6Tp","","",5,null],[13,"Ip6Dccp","","",5,null],[13,"Ip6Ipv6","","",5,null],[13,"Ip6Rsvp","","",5,null],[13,"Ip6Gre","","",5,null],[13,"Ip6Esp","","",5,null],[13,"Ip6Ah","","",5,null],[13,"Ip6Icmpv6","","",5,null],[13,"Ip6Mtp","","",5,null],[13,"Ip6Beetph","","",5,null],[13,"Ip6Encap","","",5,null],[13,"Ip6Pim","","",5,null],[13,"Ip6Comp","","",5,null],[13,"Ip6Sctp","","",5,null],[13,"Ip6Udplite","","",5,null],[13,"Cjdht","","Bencoded inter-router DHT message",5,null],[13,"Iptun","","Bencoded inter-router DHT message",5,null],[13,"Ctrl","","This content type will never appear in the wild, it…",5,null],[13,"Other","","Unrecognized or user-defined content type.",5,null],[18,"IP6_MAX","","The lowest 255 message types are reserved for cjdns/IPv6…",5,null],[18,"RESERVED","","Reserved for future allocation",5,null],[18,"RESERVED_MAX","","",5,null],[18,"AVAILABLE","","Content types in the AVAILABLE range are not defined and…",5,null],[18,"MAX","","Maximum possible defined value for the content type",5,null],[11,"from_u16","","",5,[[]]],[11,"try_to_u16","","",5,[[],["option",4]]],[18,"SIZE","","Size of serialized `DataHeader`",2,null],[18,"CURRENT_VERSION","","Current version of `DataHeader` which is automatically…",2,null],[11,"parse","","Parses raw bytes into `DataHeader` struct.",2,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `DataHeader` instance.",2,[[],[["result",4],["serializeerror",4],["vec",3]]]],[18,"SIZE","","Size of serialized `RouteHeader`",3,null],[11,"parse","","Parses raw bytes into `RouteHeader` struct.",3,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serialized `RouteHeader` instance.",3,[[],[["result",4],["serializeerror",4],["vec",3]]]],[18,"SIZE","","Size of serialized `SwitchHeader`",4,null],[18,"CURRENT_VERSION","","Current version of `SwitchHeader` which is automatically…",4,null],[11,"parse","","Parses raw bytes into `SwitchHeader` struct.",4,[[],[["result",4],["parseerror",4]]]],[11,"serialize","","Serializes `SwitchHeader` instance.",4,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["parseerror",4]]],[11,"clone","","",1,[[],["serializeerror",4]]],[11,"eq","","",1,[[["serializeerror",4]]]],[11,"ne","","",1,[[["serializeerror",4]]]],[11,"eq","","",0,[[["parseerror",4]]]],[11,"ne","","",0,[[["parseerror",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",5,[[]]],[11,"clone","","",5,[[],["contenttype",4]]],[11,"clone","","",2,[[],["dataheader",3]]],[11,"clone","","",3,[[],["routeheader",3]]],[11,"clone","","",4,[[],["switchheader",3]]],[11,"default","","",2,[[]]],[11,"eq","","",5,[[["contenttype",4]]]],[11,"eq","","",2,[[["dataheader",3]]]],[11,"ne","","",2,[[["dataheader",3]]]],[11,"eq","","",3,[[["routeheader",3]]]],[11,"ne","","",3,[[["routeheader",3]]]],[11,"eq","","",4,[[["switchheader",3]]]],[11,"ne","","",4,[[["switchheader",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"from_primitive","","",5,[[]]],[11,"try_from_primitive","","",5,[[],[["result",4],["tryfromprimitiveerror",3]]]]],"p":[[4,"ParseError"],[4,"SerializeError"],[3,"DataHeader"],[3,"RouteHeader"],[3,"SwitchHeader"],[4,"ContentType"]]},\
"cjdns_keys":{"doc":"CJDNS keys types.","i":[[3,"CJDNSKeys","cjdns_keys","Convenience type for managing all CJDNS key types in one…",null,null],[12,"private_key","","CJDNS private key.",0,null],[12,"public_key","","CJDNS public key",0,null],[12,"ip6","","CJDNS ip6",0,null],[3,"CJDNSKeysApi","","Type that encapsulates some crate functions making it…",null,null],[3,"CJDNS_IP6","","CJDNS IP6 type",null,null],[3,"CJDNSPrivateKey","","CJDNS private key type",null,null],[3,"CJDNSPublicKey","","CJDNS public key type",null,null],[11,"new","","Initialization function, which guarantees on success that…",1,[[],["result",4]]],[11,"key_pair","","Convenience method that generates safely valid key \\\"pair\\\".…",1,[[],["cjdnskeys",3]]],[11,"gen_private_key","","Safely generates private key.",1,[[],["cjdnsprivatekey",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"from","","",4,[[["cjdnsprivatekey",3]]]],[11,"from","","",4,[[]]],[11,"clone","","",1,[[],["cjdnskeysapi",3]]],[11,"clone","","",0,[[],["cjdnskeys",3]]],[11,"clone","","",2,[[],["cjdns_ip6",3]]],[11,"clone","","",3,[[],["cjdnsprivatekey",3]]],[11,"clone","","",4,[[],["cjdnspublickey",3]]],[11,"eq","","",0,[[["cjdnskeys",3]]]],[11,"ne","","",0,[[["cjdnskeys",3]]]],[11,"eq","","",2,[[["cjdns_ip6",3]]]],[11,"ne","","",2,[[["cjdns_ip6",3]]]],[11,"eq","","",3,[[["cjdnsprivatekey",3]]]],[11,"ne","","",3,[[["cjdnsprivatekey",3]]]],[11,"eq","","",4,[[["cjdnspublickey",3]]]],[11,"ne","","",4,[[["cjdnspublickey",3]]]],[11,"deref","","",2,[[]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"try_from","","",2,[[["cjdnspublickey",3]],[["result",4],["keycreationerror",4]]]],[11,"try_from","","",2,[[],[["result",4],["keycreationerror",4]]]],[11,"try_from","","",2,[[],[["result",4],["keycreationerror",4]]]],[11,"try_from","","",3,[[],[["result",4],["keycreationerror",4]]]],[11,"try_from","","",4,[[],[["result",4],["keycreationerror",4]]]]],"p":[[3,"CJDNSKeys"],[3,"CJDNSKeysApi"],[3,"CJDNS_IP6"],[3,"CJDNSPrivateKey"],[3,"CJDNSPublicKey"]]},\
"cjdns_sniff":{"doc":"Library for sniffing and injecting cjdns traffic.","i":[[3,"Connection","cjdns_sniff","Admin connection to the CJDNS node.",null,null],[12,"functions","","List of available remote functions.",0,null],[3,"CtrlMessage","","Serialized control message",null,null],[12,"msg_type","","",1,null],[12,"msg_data","","",1,null],[4,"ContentType","","Header content types.",null,null],[13,"Ip6Hop","","",2,null],[13,"Ip6Icmp","","",2,null],[13,"Ip6Igmp","","",2,null],[13,"Ip6Ipv4","","",2,null],[13,"Ip6Tcp","","",2,null],[13,"Ip6Egp","","",2,null],[13,"Ip6Pup","","",2,null],[13,"Ip6Udp","","",2,null],[13,"Ip6Idp","","",2,null],[13,"Ip6Tp","","",2,null],[13,"Ip6Dccp","","",2,null],[13,"Ip6Ipv6","","",2,null],[13,"Ip6Rsvp","","",2,null],[13,"Ip6Gre","","",2,null],[13,"Ip6Esp","","",2,null],[13,"Ip6Ah","","",2,null],[13,"Ip6Icmpv6","","",2,null],[13,"Ip6Mtp","","",2,null],[13,"Ip6Beetph","","",2,null],[13,"Ip6Encap","","",2,null],[13,"Ip6Pim","","",2,null],[13,"Ip6Comp","","",2,null],[13,"Ip6Sctp","","",2,null],[13,"Ip6Udplite","","",2,null],[13,"Cjdht","","Bencoded inter-router DHT message",2,null],[13,"Iptun","","Bencoded inter-router DHT message",2,null],[13,"Ctrl","","This content type will never appear in the wild, it…",2,null],[13,"Other","","Unrecognized or user-defined content type.",2,null],[3,"Sniffer","","Wraps connection to cjdns admin interface and allows to…",null,null],[3,"Message","","Message that is being sent or received by cjdns router.",null,null],[12,"route_header","","Route header",3,null],[12,"content_type","","Data header - content type",3,null],[12,"content","","Message content (parsed accordingly to the `content_type`)",3,null],[12,"raw_bytes","","The whole message\'s serialized representation",3,null],[4,"Content","","Message content enum.",null,null],[13,"Empty","","Empty content",4,null],[13,"Bytes","","Raw binary of the content, if it cannot be decoded into…",4,null],[13,"Benc","","If the `content_type` is `ContentType::Cjdht` this is the…",4,null],[13,"Ctrl","","If the message is control message (`route_header.is_ctrl…",4,null],[4,"ConnectError","","Connection or disconnection error.",null,null],[13,"RpcError","","RPC invocation error (e.g. network error)",5,null],[13,"BadResponse","","Bad RPC response (unrecognized message format etc)",5,null],[13,"SocketError","","UDP socket error",5,null],[4,"SendError","","Error while sending message.",null,null],[13,"SerializeError","","Generic serialization error",6,null],[13,"BencodeError","","Bencode serialization error",6,null],[13,"SocketError","","UDP socket error",6,null],[13,"WriteError","","Unable to write all the data to the socket (too big message)",6,null],[4,"ReceiveError","","Error while receiving message.",null,null],[13,"SocketError","","UDP socket error",7,null],[13,"ParseError","","Generic deserialization error",7,null],[11,"sniff_traffic","","Create new `Sniffer` instance by connecting to a cjdns node.",8,[[["contenttype",4],["connection",3]]]],[11,"send","","Send a message. Destination is an optional argument, if…",8,[[["message",3],["option",4]]]],[11,"receive","","Receive a message.",8,[[]]],[11,"disconnect","","Disconnect from cjdns router. Failing to do so would…",8,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"as_fail","","",5,[[],["fail",8]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_fail","","",6,[[],["fail",8]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"vzip","","",7,[[]]],[11,"clone","","",1,[[],["ctrlmessage",3]]],[11,"eq","","",1,[[["ctrlmessage",3]]]],[11,"ne","","",1,[[["ctrlmessage",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from_primitive","","",2,[[],[["tryfromprimitiveerror",3],["result",4],["contenttype",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",2,[[],["contenttype",4]]],[11,"from","","",2,[[],["contenttype",4]]],[11,"from_primitive","","",2,[[],["contenttype",4]]],[11,"eq","","",2,[[["contenttype",4]]]],[11,"clone","","",3,[[],["message",3]]],[11,"clone","","",4,[[],["content",4]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"invoke","","Call remote function on CJDNS router.",0,[[]]],[18,"HEADER_SIZE","","Control message header size, which is considered as…",1,null],[11,"parse","","Parses raw bytes into `CtrlMessage`.",1,[[],[["parseerror",4],["result",4],["ctrlmessage",3]]]],[11,"serialize","","Serializes `CtrlMessage` instance.",1,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"get_error_data","","",1,[[],[["option",4],["errordata",3]]]],[11,"get_ping_data","","",1,[[],[["option",4],["pingdata",3]]]],[18,"IP6_MAX","","The lowest 255 message types are reserved for cjdns/IPv6…",2,null],[18,"RESERVED","","Reserved for future allocation",2,null],[18,"RESERVED_MAX","","",2,null],[18,"AVAILABLE","","Content types in the AVAILABLE range are not defined and…",2,null],[18,"MAX","","Maximum possible defined value for the content type",2,null],[11,"from_u16","","",2,[[],["contenttype",4]]],[11,"try_to_u16","","",2,[[],["option",4]]]],"p":[[3,"Connection"],[3,"CtrlMessage"],[4,"ContentType"],[3,"Message"],[4,"Content"],[4,"ConnectError"],[4,"SendError"],[4,"ReceiveError"],[3,"Sniffer"]]},\
"cjdns_snode":{"doc":"CJDNS supernode","i":[[5,"main","cjdns_snode","",null,[[]]],[5,"run","","",null,[[]]],[0,"args","","Command-line arguments parsing.",null,null],[3,"Opts","cjdns_snode::args","CJDNS supernode.",null,null],[12,"config_file","","Config file path",0,null],[5,"parse","","Parse command line.",null,[[],["opts",3]]],[0,"config","cjdns_snode","Config file parsing.",null,null],[3,"Config","cjdns_snode::config","",null,null],[12,"connect","","",1,null],[12,"peers","","",1,null],[5,"load","","Load config file",null,[[["path",3]]]],[0,"supernode","cjdns_snode","CJDNS supernode implementation.",null,null],[5,"run","cjdns_snode::supernode","",null,[[["config",3]]]],[5,"keep_table_clean","","",null,[[]]],[5,"service","","",null,[[]]],[5,"test_srv","","",null,[[]]],[0,"utils","cjdns_snode","",null,null],[0,"node","cjdns_snode::utils","",null,null],[3,"NODE_NAME_RE","cjdns_snode::utils::node","",null,null],[12,"__private_field","","",2,null],[5,"parse_node_name","","Gets version, label and public key all together in tuple…",null,[[["string",3]],["result",4]]],[11,"from","cjdns_snode::args","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","cjdns_snode::config","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"from","cjdns_snode::utils::node","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","cjdns_snode::config","",1,[[],["config",3]]],[11,"default","","",1,[[],["config",3]]],[11,"eq","","",1,[[["config",3]]]],[11,"ne","","",1,[[["config",3]]]],[11,"deref","cjdns_snode::utils::node","",2,[[],["regex",3]]],[11,"fmt","cjdns_snode::config","",1,[[["formatter",3]],["result",6]]],[11,"initialize","cjdns_snode::utils::node","",2,[[]]],[11,"into_app","cjdns_snode::args","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"deserialize","cjdns_snode::config","",1,[[],["result",4]]]],"p":[[3,"Opts"],[3,"Config"],[3,"NODE_NAME_RE"]]},\
"cjdnsadmin":{"doc":"CJDNS Admin tool","i":[[5,"main","cjdnsadmin","",null,[[]]],[5,"run","","",null,[[]]],[5,"split_fn_invocation_str","","",null,[[],["result",4]]],[5,"parse_remote_fn_args","","",null,[[],[["result",4],["vec",3]]]],[5,"make_args","","",null,[[["func",3],["vec",3],["argvalue",4]],["argvalues",3]]]],"p":[]},\
"dumpctrl":{"doc":"Tool to sniff CTRL messages.","i":[[5,"main","dumpctrl","",null,[[]]],[5,"run","","",null,[[]]],[5,"receive_loop","","",null,[[["sniffer",3]]]],[5,"dump_msg","","",null,[[["message",3]],[["error",3],["result",4]]]],[5,"msg_type_str","","",null,[[["ctrlmessagetype",4]]]],[5,"err_type_str","","",null,[[["errormessagetype",4]]]],[5,"dump_error","","",null,[[["parseerror",4],["vec",3]]]]],"p":[]},\
"dumpdht":{"doc":"Tool to sniff CJDHT messages.","i":[[5,"main","dumpdht","",null,[[]]],[5,"run","","",null,[[]]],[5,"receive_loop","","",null,[[["sniffer",3]]]],[5,"dump_msg","","",null,[[["message",3]],[["error",3],["result",4]]]],[5,"dump_bencode","","",null,[[["vec",3],["bvalue",3]],["result",4]]],[5,"dump_error","","",null,[[["vec",3],["parseerror",4]]]]],"p":[]},\
"netchecksum":{"doc":"The 1s complement checksum used by TCP, UDP and ICMP.","i":[[5,"cksum_raw","netchecksum","",null,[[]]],[5,"cksum_udp4","","",null,[[],["result",4]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);